=== Sylow Solver - State Monad Version ===

Interactive Theorem Proving:
Enter a group order to analyze (positive integer, or press Enter for default 60):

Analyzing group of order 108...

Mathematical analysis of groups of order 108:
Prime factorization: 108 = 2^2 × 3^3

Sylow subgroup analysis:
  2-Sylow subgroups:
    Order: 4 (= 2^2)
    Possible counts: [1,3,9,27]
    2-killable: False
  3-Sylow subgroups:
    Order: 27 (= 3^3)
    Possible counts: [1,4]
    3-killable: False

Is this group order Sylow-killable? False
  → Groups of this order could potentially be simple.

F0  :  group   ["G"]
F1  :  order   ["G","108"]
F2  :  simple   ["G"]
Initial facts:
  G is a group
  order(G) = 108
  G is simple

Goal: Prove that
  ⊥ (contradiction reached) (by assuming G is simple)

Available theorems:
  - lagrange
  - not_simple
  - sylow
  - single_sylow_normal
  - p_group_not_simple
  - divides_contradiction
  - count_order_pk_elements
  - counting_contradiction
  - embed_An
  - alternating_order
  - alternating_simple
  - multiple_sylows
  - possible_max_intersections
  - intersection_of_sylows
  - normalizer_sylow_intersection
  - normalizer_everything_implies_normal
  - normal_subgroup_to_not_simple
  - rule_out_max_intersections
  - rule_out_normalizer_of_intersection_order
  - embedding_contradiction
  - early_contradiction
  - coset_action
  - simple_group_action
  - enhanced_subgroup_index
  - multiple_counting_contradiction
Beginning automated proof search. I will attempt to derive a contradiction from the assumption that G is simple.

--- Iteration 0 ---
by thm  sylow  applied to facts  F0 F1
D3 :
Fact {factName = "num_sylow", factArgs = ["2","G","1"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "num_sylow", factArgs = ["2","G","3"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "num_sylow", factArgs = ["2","G","9"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "num_sylow", factArgs = ["2","G","27"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F4  :  num_sylow   ["2","G","1"]
    Disjunctions in history: [("D3",0)]
F5  :  num_sylow   ["2","G","3"]
    Disjunctions in history: [("D3",1)]
F6  :  num_sylow   ["2","G","9"]
    Disjunctions in history: [("D3",2)]
F7  :  num_sylow   ["2","G","27"]
    Disjunctions in history: [("D3",3)]
D8 :
Fact {factName = "num_sylow", factArgs = ["3","G","1"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "num_sylow", factArgs = ["3","G","4"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F9  :  num_sylow   ["3","G","1"]
    Disjunctions in history: [("D8",0)]
F10  :  num_sylow   ["3","G","4"]
    Disjunctions in history: [("D8",1)]
F11  :  sylow_order   ["G","2","4"]
    by thm  sylow
F12  :  sylow_p_subgroup   ["A","2","G"]
    by thm  sylow
F13  :  order   ["A","4"]
    by thm  sylow
F14  :  sylow_order   ["G","3","27"]
    by thm  sylow
F15  :  sylow_p_subgroup   ["B","3","G"]
    by thm  sylow
F16  :  order   ["B","27"]
    by thm  sylow
By Sylow's theorem, 2: n_2 ∈ {1, 27, 3, 9}; 3: n_3 ∈ {1, 4}. We will examine the possible combinations of these counts.

--- Iteration 1 [6/15 facts in branches] ---
by thm  sylow  applied to facts  F0 F1
F17  :  sylow_p_subgroup   ["C","2","G"]
    by thm  sylow
F18  :  order   ["C","4"]
    by thm  sylow
F19  :  sylow_p_subgroup   ["D","3","G"]
    by thm  sylow
F20  :  order   ["D","27"]
    by thm  sylow
By Sylow's theorem, 2: n_2 ∈ {1, 27, 3, 9}; 3: n_3 ∈ {1, 4}. We will examine the possible combinations of these counts.
by thm  single_sylow_normal  applied to facts  F12 F4 F1
    ancestors: [("D3",0)]
F21  :  not_simple   ["G"]
    by thm  single_sylow_normal
    Disjunctions in history: [("D3",0)]
If a Sylow p-subgroup is unique then it is normal; this contradicts simplicity when G is assumed simple.
by thm  single_sylow_normal  applied to facts  F15 F9 F1
    ancestors: [("D8",0)]
F22  :  not_simple   ["G"]
    by thm  single_sylow_normal
    Disjunctions in history: [("D8",0)]
If a Sylow p-subgroup is unique then it is normal; this contradicts simplicity when G is assumed simple.
by thm  count_order_pk_elements  applied to facts  F12 F4 F13
    ancestors: [("D3",0)]
F23  :  order_pk_lower_bound   ["G","2","3"]
    by thm  count_order_pk_elements
    Disjunctions in history: [("D3",0)]
Hence: G has at least 3 elements of order divisible by 2.
by thm  count_order_pk_elements  applied to facts  F12 F5 F13
    ancestors: [("D3",1)]
F24  :  order_pk_lower_bound   ["G","2","4"]
    by thm  count_order_pk_elements
    Disjunctions in history: [("D3",1)]
Hence: G has at least 4 elements of order divisible by 2.
by thm  count_order_pk_elements  applied to facts  F12 F6 F13
    ancestors: [("D3",2)]
F25  :  order_pk_lower_bound   ["G","2","4"]
    by thm  count_order_pk_elements
    Disjunctions in history: [("D3",2)]
Hence: G has at least 4 elements of order divisible by 2.
by thm  count_order_pk_elements  applied to facts  F12 F7 F13
    ancestors: [("D3",3)]
F26  :  order_pk_lower_bound   ["G","2","4"]
    by thm  count_order_pk_elements
    Disjunctions in history: [("D3",3)]
Hence: G has at least 4 elements of order divisible by 2.
by thm  count_order_pk_elements  applied to facts  F15 F9 F16
    ancestors: [("D8",0)]
F27  :  order_pk_lower_bound   ["G","3","26"]
    by thm  count_order_pk_elements
    Disjunctions in history: [("D8",0)]
Hence: G has at least 26 elements of order divisible by 3.
by thm  count_order_pk_elements  applied to facts  F15 F10 F16
    ancestors: [("D8",1)]
F28  :  order_pk_lower_bound   ["G","3","27"]
    by thm  count_order_pk_elements
    Disjunctions in history: [("D8",1)]
Hence: G has at least 27 elements of order divisible by 3.
by thm  embed_An  applied to facts  F5 F2
    ancestors: [("D3",1)]
F29  :  subgroup   ["G","E"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
F30  :  alternating_group   ["E","3"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_3 (alternating group).
by thm  embed_An  applied to facts  F6 F2
    ancestors: [("D3",2)]
F31  :  subgroup   ["G","F"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
F32  :  alternating_group   ["F","9"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
Hence: G ⊆ ?alt; ?alt ≅ A_9 (alternating group).
by thm  embed_An  applied to facts  F7 F2
    ancestors: [("D3",3)]
F33  :  subgroup   ["G","H"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
F34  :  alternating_group   ["H","27"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
Hence: G ⊆ ?alt; ?alt ≅ A_27 (alternating group).
by thm  embed_An  applied to facts  F10 F2
    ancestors: [("D8",1)]
F35  :  subgroup   ["G","I"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
F36  :  alternating_group   ["I","4"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_4 (alternating group).
by thm  multiple_sylows  applied to facts  F5
    ancestors: [("D3",1)]
F37  :  more_than_one_sylow   ["2","G"]
    by thm  multiple_sylows
    Disjunctions in history: [("D3",1)]
Hence: There are at least two 2-Sylow subgroups in G.
by thm  multiple_sylows  applied to facts  F6
    ancestors: [("D3",2)]
F38  :  more_than_one_sylow   ["2","G"]
    by thm  multiple_sylows
    Disjunctions in history: [("D3",2)]
Hence: There are at least two 2-Sylow subgroups in G.
by thm  multiple_sylows  applied to facts  F7
    ancestors: [("D3",3)]
F39  :  more_than_one_sylow   ["2","G"]
    by thm  multiple_sylows
    Disjunctions in history: [("D3",3)]
Hence: There are at least two 2-Sylow subgroups in G.
by thm  multiple_sylows  applied to facts  F10
    ancestors: [("D8",1)]
F40  :  more_than_one_sylow   ["3","G"]
    by thm  multiple_sylows
    Disjunctions in history: [("D8",1)]
Hence: There are at least two 3-Sylow subgroups in G.

--- Iteration 2 [26/39 facts in branches] ---
F41  :  false   []
    by thm  not_simple
    Disjunctions in history: [("D3",0)]
DEBUG addNewFacts: recording goal combo from F41 -> [("D3",0)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D3",0),Just ("num_sylow",["2","G","1"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4)]
DEBUG allPossibleCombos count = 4
  fullCombo: [("D3",0)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",1)]  coveredBy: []
  fullCombo: [("D3",2)]  coveredBy: []
  fullCombo: [("D3",3)]  coveredBy: []
DEBUG allCovered = False
Applied theorem: not_simple
    -> [Case D3.1] ⊥ (contradiction reached)
F42  :  false   []
    by thm  not_simple
    Disjunctions in history: [("D8",0)]
DEBUG addNewFacts: recording goal combo from F42 -> [("D8",0)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D8",0),Just ("num_sylow",["3","G","1"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2)]
DEBUG allPossibleCombos count = 8
  fullCombo: [("D3",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D8",1)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",1),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D8",1)]  coveredBy: []
  fullCombo: [("D3",2),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",2),("D8",1)]  coveredBy: []
  fullCombo: [("D3",3),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",3),("D8",1)]  coveredBy: []
DEBUG allCovered = False
Applied theorem: not_simple
    -> [Case D8.1] ⊥ (contradiction reached)
by thm  sylow  applied to facts  F0 F1
F43  :  sylow_p_subgroup   ["J","2","G"]
    by thm  sylow
F44  :  order   ["J","4"]
    by thm  sylow
F45  :  sylow_p_subgroup   ["K","3","G"]
    by thm  sylow
F46  :  order   ["K","27"]
    by thm  sylow
By Sylow's theorem, 2: n_2 ∈ {1, 27, 3, 9}; 3: n_3 ∈ {1, 4}. We will examine the possible combinations of these counts.
by thm  single_sylow_normal  applied to facts  F12 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F15 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F17 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F19 F9 F1
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F12 F4 F13
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F12 F5 F13
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F12 F6 F13
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F12 F7 F13
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F15 F9 F16
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F15 F10 F16
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F17 F4 F18
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F17 F5 F18
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F17 F6 F18
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F17 F7 F18
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F19 F9 F20
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F19 F10 F20
    ancestors: [("D8",1)]
by thm  embed_An  applied to facts  F5 F2
    ancestors: [("D3",1)]
F47  :  subgroup   ["G","L"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
F48  :  alternating_group   ["L","3"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_3 (alternating group).
by thm  embed_An  applied to facts  F6 F2
    ancestors: [("D3",2)]
F49  :  subgroup   ["G","M"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
F50  :  alternating_group   ["M","9"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
Hence: G ⊆ ?alt; ?alt ≅ A_9 (alternating group).
by thm  embed_An  applied to facts  F7 F2
    ancestors: [("D3",3)]
F51  :  subgroup   ["G","N"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
F52  :  alternating_group   ["N","27"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
Hence: G ⊆ ?alt; ?alt ≅ A_27 (alternating group).
by thm  embed_An  applied to facts  F10 F2
    ancestors: [("D8",1)]
F53  :  subgroup   ["G","O"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
F54  :  alternating_group   ["O","4"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_4 (alternating group).
by thm  alternating_order  applied to facts  F30
    ancestors: [("D3",1)]
F55  :  order   ["E","3"]
    by thm  alternating_order
    Disjunctions in history: [("D3",1)]
Hence: order(E) = 3.
by thm  alternating_order  applied to facts  F32
    ancestors: [("D3",2)]
F56  :  order   ["F","181440"]
    by thm  alternating_order
    Disjunctions in history: [("D3",2)]
Hence: order(F) = 181440.
by thm  alternating_order  applied to facts  F34
    ancestors: [("D3",3)]
F57  :  order   ["H","-2741823448618631168"]
    by thm  alternating_order
    Disjunctions in history: [("D3",3)]
Hence: order(H) = -2741823448618631168.
by thm  alternating_order  applied to facts  F36
    ancestors: [("D8",1)]
F58  :  order   ["I","12"]
    by thm  alternating_order
    Disjunctions in history: [("D8",1)]
Hence: order(I) = 12.
by thm  alternating_simple  applied to facts  F32
    ancestors: [("D3",2)]
F59  :  simple   ["F"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",2)]
Hence: F is simple.
by thm  alternating_simple  applied to facts  F34
    ancestors: [("D3",3)]
F60  :  simple   ["H"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",3)]
Hence: H is simple.
by thm  multiple_sylows  applied to facts  F5
    ancestors: [("D3",1)]
by thm  multiple_sylows  applied to facts  F6
    ancestors: [("D3",2)]
by thm  multiple_sylows  applied to facts  F7
    ancestors: [("D3",3)]
by thm  multiple_sylows  applied to facts  F10
    ancestors: [("D8",1)]
by thm  possible_max_intersections  applied to facts  F37 F11
    ancestors: [("D3",1)]
D61 :
Fact {factName = "max_sylow_intersection", factArgs = ["G","2","1"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "max_sylow_intersection", factArgs = ["G","2","2"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F62  :  max_sylow_intersection   ["G","2","1"]
    Disjunctions in history: [("D3",1),("D61",0)]
F63  :  max_sylow_intersection   ["G","2","2"]
    Disjunctions in history: [("D3",1),("D61",1)]
Also consider the following case distinctions: {Among the 2-Sylow subgroups of G, the largest pairwise intersection has size 1, Among the 2-Sylow subgroups of G, the largest pairwise intersection has size 2}.
Disjunction D61 (2 alternatives):
    (1) Among the 2-Sylow subgroups of G, the largest pairwise intersection has size 1    [case: D61.1]
    (2) Among the 2-Sylow subgroups of G, the largest pairwise intersection has size 2    [case: D61.2]

by thm  possible_max_intersections  applied to facts  F38 F11
    ancestors: [("D3",2)]
by thm  possible_max_intersections  applied to facts  F39 F11
    ancestors: [("D3",3)]
by thm  possible_max_intersections  applied to facts  F40 F14
    ancestors: [("D8",1)]
D64 :
Fact {factName = "max_sylow_intersection", factArgs = ["G","3","1"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "max_sylow_intersection", factArgs = ["G","3","3"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "max_sylow_intersection", factArgs = ["G","3","9"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F65  :  max_sylow_intersection   ["G","3","1"]
    Disjunctions in history: [("D64",0),("D8",1)]
F66  :  max_sylow_intersection   ["G","3","3"]
    Disjunctions in history: [("D64",1),("D8",1)]
F67  :  max_sylow_intersection   ["G","3","9"]
    Disjunctions in history: [("D64",2),("D8",1)]
Also consider the following case distinctions: {Among the 3-Sylow subgroups of G, the largest pairwise intersection has size 1, Among the 3-Sylow subgroups of G, the largest pairwise intersection has size 3, Among the 3-Sylow subgroups of G, the largest pairwise intersection has size 9}.
Disjunction D64 (3 alternatives):
    (1) Among the 3-Sylow subgroups of G, the largest pairwise intersection has size 1    [case: D64.1]
    (2) Among the 3-Sylow subgroups of G, the largest pairwise intersection has size 3    [case: D64.2]
    (3) Among the 3-Sylow subgroups of G, the largest pairwise intersection has size 9    [case: D64.3]


--- Iteration 3 [47/64 facts in branches] ---
F68  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D3",1)]
Applied theorem: lagrange
    -> [Case D3.2] n | m
F69  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D3",2)]
Applied theorem: lagrange
    -> [Case D3.3] n | m
F70  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D3",3)]
Applied theorem: lagrange
    -> [Case D3.4] n | m
F71  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D8",1)]
Applied theorem: lagrange
    -> [Case D8.2] n | m
by thm  sylow  applied to facts  F0 F1
F72  :  sylow_p_subgroup   ["P","2","G"]
    by thm  sylow
F73  :  order   ["P","4"]
    by thm  sylow
F74  :  sylow_p_subgroup   ["Q","3","G"]
    by thm  sylow
F75  :  order   ["Q","27"]
    by thm  sylow
By Sylow's theorem, 2: n_2 ∈ {1, 27, 3, 9}; 3: n_3 ∈ {1, 4}. We will examine the possible combinations of these counts.
by thm  single_sylow_normal  applied to facts  F12 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F15 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F17 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F19 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F43 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F45 F9 F1
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F12 F4 F13
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F12 F5 F13
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F12 F6 F13
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F12 F7 F13
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F15 F9 F16
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F15 F10 F16
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F17 F4 F18
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F17 F5 F18
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F17 F6 F18
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F17 F7 F18
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F19 F9 F20
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F19 F10 F20
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F43 F4 F44
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F43 F5 F44
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F43 F6 F44
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F43 F7 F44
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F45 F9 F46
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F45 F10 F46
    ancestors: [("D8",1)]
by thm  embed_An  applied to facts  F5 F2
    ancestors: [("D3",1)]
F76  :  subgroup   ["G","R"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
F77  :  alternating_group   ["R","3"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_3 (alternating group).
by thm  embed_An  applied to facts  F6 F2
    ancestors: [("D3",2)]
F78  :  subgroup   ["G","S"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
F79  :  alternating_group   ["S","9"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
Hence: G ⊆ ?alt; ?alt ≅ A_9 (alternating group).
by thm  embed_An  applied to facts  F7 F2
    ancestors: [("D3",3)]
F80  :  subgroup   ["G","T"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
F81  :  alternating_group   ["T","27"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
Hence: G ⊆ ?alt; ?alt ≅ A_27 (alternating group).
by thm  embed_An  applied to facts  F10 F2
    ancestors: [("D8",1)]
F82  :  subgroup   ["G","U"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
F83  :  alternating_group   ["U","4"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_4 (alternating group).
by thm  alternating_order  applied to facts  F30
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F32
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F34
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F36
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F48
    ancestors: [("D3",1)]
F84  :  order   ["L","3"]
    by thm  alternating_order
    Disjunctions in history: [("D3",1)]
Hence: order(L) = 3.
by thm  alternating_order  applied to facts  F50
    ancestors: [("D3",2)]
F85  :  order   ["M","181440"]
    by thm  alternating_order
    Disjunctions in history: [("D3",2)]
Hence: order(M) = 181440.
by thm  alternating_order  applied to facts  F52
    ancestors: [("D3",3)]
F86  :  order   ["N","-2741823448618631168"]
    by thm  alternating_order
    Disjunctions in history: [("D3",3)]
Hence: order(N) = -2741823448618631168.
by thm  alternating_order  applied to facts  F54
    ancestors: [("D8",1)]
F87  :  order   ["O","12"]
    by thm  alternating_order
    Disjunctions in history: [("D8",1)]
Hence: order(O) = 12.
by thm  alternating_simple  applied to facts  F32
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F34
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F50
    ancestors: [("D3",2)]
F88  :  simple   ["M"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",2)]
Hence: M is simple.
by thm  alternating_simple  applied to facts  F52
    ancestors: [("D3",3)]
F89  :  simple   ["N"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",3)]
Hence: N is simple.
by thm  multiple_sylows  applied to facts  F5
    ancestors: [("D3",1)]
by thm  multiple_sylows  applied to facts  F6
    ancestors: [("D3",2)]
by thm  multiple_sylows  applied to facts  F7
    ancestors: [("D3",3)]
by thm  multiple_sylows  applied to facts  F10
    ancestors: [("D8",1)]
by thm  possible_max_intersections  applied to facts  F37 F11
    ancestors: [("D3",1)]
by thm  possible_max_intersections  applied to facts  F38 F11
    ancestors: [("D3",2)]
by thm  possible_max_intersections  applied to facts  F39 F11
    ancestors: [("D3",3)]
by thm  possible_max_intersections  applied to facts  F40 F14
    ancestors: [("D8",1)]
by thm  intersection_of_sylows  applied to facts  F62
    ancestors: [("D3",1),("D61",0)]
F90  :  sylow_p_subgroup   ["V","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F91  :  sylow_p_subgroup   ["W","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F92  :  intersection   ["V","W","X"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F93  :  order   ["X","1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
Hence: ?P is a 2-Sylow subgroup of G; ?Q is a 2-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 1.
by thm  intersection_of_sylows  applied to facts  F63
    ancestors: [("D3",1),("D61",1)]
F94  :  sylow_p_subgroup   ["Y","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F95  :  sylow_p_subgroup   ["Z","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F96  :  intersection   ["Y","Z","A1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F97  :  order   ["A1","2"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: ?P is a 2-Sylow subgroup of G; ?Q is a 2-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 2.
by thm  intersection_of_sylows  applied to facts  F65
    ancestors: [("D64",0),("D8",1)]
F98  :  sylow_p_subgroup   ["B1","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F99  :  sylow_p_subgroup   ["C1","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F100  :  intersection   ["B1","C1","D1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F101  :  order   ["D1","1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 1.
by thm  intersection_of_sylows  applied to facts  F66
    ancestors: [("D64",1),("D8",1)]
F102  :  sylow_p_subgroup   ["E1","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F103  :  sylow_p_subgroup   ["F1","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F104  :  intersection   ["E1","F1","G1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F105  :  order   ["G1","3"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 3.
by thm  intersection_of_sylows  applied to facts  F67
    ancestors: [("D64",2),("D8",1)]
F106  :  sylow_p_subgroup   ["H1","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F107  :  sylow_p_subgroup   ["I1","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F108  :  intersection   ["H1","I1","J1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F109  :  order   ["J1","9"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 9.
by thm  rule_out_max_intersections  applied to facts  F5 F62 F11
    ancestors: [("D3",1),("D61",0)]
F110  :  false   []
    by thm  rule_out_max_intersections
    Disjunctions in history: [("D3",1),("D61",0)]
DEBUG addNewFacts: recording goal combo from F110 -> [("D3",1),("D61",0)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D3",1),Just ("num_sylow",["2","G","3"])),(("D61",0),Just ("max_sylow_intersection",["G","2","1"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2)]
DEBUG allPossibleCombos count = 16
  fullCombo: [("D3",0),("D61",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D8",1)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D8",1)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",1),("D61",0),("D8",0)]  coveredBy: [[("D3",1),("D61",0)],[("D8",0)]]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",1),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",0),("D8",1)]  coveredBy: [[("D3",1),("D61",0)]]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
  fullCombo: [("D3",1),("D61",1),("D8",1)]  coveredBy: []
  fullCombo: [("D3",2),("D61",0),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",2),("D61",1),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",2),("D61",0),("D8",1)]  coveredBy: []
  fullCombo: [("D3",2),("D61",1),("D8",1)]  coveredBy: []
  fullCombo: [("D3",3),("D61",0),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",3),("D61",1),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",3),("D61",0),("D8",1)]  coveredBy: []
  fullCombo: [("D3",3),("D61",1),("D8",1)]  coveredBy: []
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  rule_out_max_intersections  applied to facts  F10 F65 F14
    ancestors: [("D64",0),("D8",1)]
F111  :  false   []
    by thm  rule_out_max_intersections
    Disjunctions in history: [("D64",0),("D8",1)]
DEBUG addNewFacts: recording goal combo from F111 -> [("D64",0),("D8",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D64",0),Just ("max_sylow_intersection",["G","3","1"])),(("D8",1),Just ("num_sylow",["3","G","4"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3)]
DEBUG allPossibleCombos count = 48
  fullCombo: [("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",1),("D8",1)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",2),("D8",1)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",1),("D8",1)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",2),("D8",1)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D3",1),("D61",0)],[("D8",0)]]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D3",1),("D61",0)],[("D8",0)]]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D3",1),("D61",0)],[("D8",0)]]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",1),("D64",0),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",1),("D64",1),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",1),("D64",2),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",0),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",1),("D61",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
  fullCombo: [("D3",1),("D61",0),("D64",1),("D8",1)]  coveredBy: [[("D3",1),("D61",0)]]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  rule_out_max_intersections  applied to facts  F10 F66 F14
    ancestors: [("D64",1),("D8",1)]
F112  :  false   []
    by thm  rule_out_max_intersections
    Disjunctions in history: [("D64",1),("D8",1)]
DEBUG addNewFacts: recording goal combo from F112 -> [("D64",1),("D8",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D64",1),Just ("max_sylow_intersection",["G","3","3"])),(("D8",1),Just ("num_sylow",["3","G","4"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3)]
DEBUG allPossibleCombos count = 48
  fullCombo: [("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",1),("D8",1)]  coveredBy: [[("D64",1),("D8",1)],[("D3",0)]]
    producers for [("D64",1),("D8",1)] -> [("F102","sylow_p_subgroup",["E1","3","G"]),("F103","sylow_p_subgroup",["F1","3","G"]),("F104","intersection",["E1","F1","G1"]),("F105","order",["G1","3"]),("F112","false",[]),("F66","max_sylow_intersection",["G","3","3"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",2),("D8",1)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",1),("D8",1)]  coveredBy: [[("D64",1),("D8",1)],[("D3",0)]]
    producers for [("D64",1),("D8",1)] -> [("F102","sylow_p_subgroup",["E1","3","G"]),("F103","sylow_p_subgroup",["F1","3","G"]),("F104","intersection",["E1","F1","G1"]),("F105","order",["G1","3"]),("F112","false",[]),("F66","max_sylow_intersection",["G","3","3"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",2),("D8",1)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D3",1),("D61",0)],[("D8",0)]]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D3",1),("D61",0)],[("D8",0)]]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D3",1),("D61",0)],[("D8",0)]]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",1),("D64",0),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",1),("D64",1),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",1),("D64",2),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",0),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",1),("D61",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
  fullCombo: [("D3",1),("D61",0),("D64",1),("D8",1)]  coveredBy: [[("D64",1),("D8",1)],[("D3",1),("D61",0)]]
    producers for [("D64",1),("D8",1)] -> [("F102","sylow_p_subgroup",["E1","3","G"]),("F103","sylow_p_subgroup",["F1","3","G"]),("F104","intersection",["E1","F1","G1"]),("F105","order",["G1","3"]),("F112","false",[]),("F66","max_sylow_intersection",["G","3","3"])]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  early_contradiction  applied to facts  F31 F1 F56
    ancestors: [("D3",2)]
F113  :  false   []
    by thm  early_contradiction
    Disjunctions in history: [("D3",2)]
DEBUG addNewFacts: recording goal combo from F113 -> [("D3",2)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D3",2),Just ("num_sylow",["2","G","9"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3)]
DEBUG allPossibleCombos count = 48
  fullCombo: [("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",1),("D8",1)]  coveredBy: [[("D64",1),("D8",1)],[("D3",0)]]
    producers for [("D64",1),("D8",1)] -> [("F102","sylow_p_subgroup",["E1","3","G"]),("F103","sylow_p_subgroup",["F1","3","G"]),("F104","intersection",["E1","F1","G1"]),("F105","order",["G1","3"]),("F112","false",[]),("F66","max_sylow_intersection",["G","3","3"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",0),("D64",2),("D8",1)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",1),("D8",1)]  coveredBy: [[("D64",1),("D8",1)],[("D3",0)]]
    producers for [("D64",1),("D8",1)] -> [("F102","sylow_p_subgroup",["E1","3","G"]),("F103","sylow_p_subgroup",["F1","3","G"]),("F104","intersection",["E1","F1","G1"]),("F105","order",["G1","3"]),("F112","false",[]),("F66","max_sylow_intersection",["G","3","3"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",0),("D61",1),("D64",2),("D8",1)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D3",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D3",1),("D61",0)],[("D8",0)]]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D3",1),("D61",0)],[("D8",0)]]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D3",1),("D61",0)],[("D8",0)]]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",1),("D64",0),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",1),("D64",1),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",1),("D64",2),("D8",0)]  coveredBy: [[("D8",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
  fullCombo: [("D3",1),("D61",0),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",1),("D61",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
  fullCombo: [("D3",1),("D61",0),("D64",1),("D8",1)]  coveredBy: [[("D64",1),("D8",1)],[("D3",1),("D61",0)]]
    producers for [("D64",1),("D8",1)] -> [("F102","sylow_p_subgroup",["E1","3","G"]),("F103","sylow_p_subgroup",["F1","3","G"]),("F104","intersection",["E1","F1","G1"]),("F105","order",["G1","3"]),("F112","false",[]),("F66","max_sylow_intersection",["G","3","3"])]
    producers for [("D3",1),("D61",0)] -> [("F110","false",[]),("F62","max_sylow_intersection",["G","2","1"]),("F90","sylow_p_subgroup",["V","2","G"]),("F91","sylow_p_subgroup",["W","2","G"]),("F92","intersection",["V","W","X"]),("F93","order",["X","1"])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  enhanced_subgroup_index  applied to facts  F31 F1 F56
    ancestors: [("D3",2)]
F114  :  index   ["F","G","1680"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D3",2)]
F115  :  transitive_action   ["F","1680"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D3",2)]
Hence: index(F, G, 1680); F acts transitively on 1680 elements.

--- Iteration 4 [91/112 facts in branches] ---
by thm  sylow  applied to facts  F0 F1
F116  :  sylow_p_subgroup   ["K1","2","G"]
    by thm  sylow
F117  :  order   ["K1","4"]
    by thm  sylow
F118  :  sylow_p_subgroup   ["L1","3","G"]
    by thm  sylow
F119  :  order   ["L1","27"]
    by thm  sylow
By Sylow's theorem, 2: n_2 ∈ {1, 27, 3, 9}; 3: n_3 ∈ {1, 4}. We will examine the possible combinations of these counts.
by thm  single_sylow_normal  applied to facts  F12 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F15 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F17 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F19 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F43 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F45 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F72 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F74 F9 F1
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F12 F4 F13
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F12 F5 F13
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F12 F6 F13
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F12 F7 F13
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F15 F9 F16
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F15 F10 F16
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F17 F4 F18
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F17 F5 F18
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F17 F6 F18
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F17 F7 F18
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F19 F9 F20
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F19 F10 F20
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F43 F4 F44
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F43 F5 F44
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F43 F6 F44
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F43 F7 F44
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F45 F9 F46
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F45 F10 F46
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F72 F4 F73
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F72 F5 F73
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F72 F6 F73
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F72 F7 F73
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F74 F9 F75
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F74 F10 F75
    ancestors: [("D8",1)]
by thm  embed_An  applied to facts  F5 F2
    ancestors: [("D3",1)]
F120  :  subgroup   ["G","M1"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
F121  :  alternating_group   ["M1","3"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_3 (alternating group).
by thm  embed_An  applied to facts  F6 F2
    ancestors: [("D3",2)]
F122  :  subgroup   ["G","N1"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
F123  :  alternating_group   ["N1","9"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
Hence: G ⊆ ?alt; ?alt ≅ A_9 (alternating group).
by thm  embed_An  applied to facts  F7 F2
    ancestors: [("D3",3)]
F124  :  subgroup   ["G","O1"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
F125  :  alternating_group   ["O1","27"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
Hence: G ⊆ ?alt; ?alt ≅ A_27 (alternating group).
by thm  embed_An  applied to facts  F10 F2
    ancestors: [("D8",1)]
F126  :  subgroup   ["G","P1"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
F127  :  alternating_group   ["P1","4"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_4 (alternating group).
by thm  alternating_order  applied to facts  F30
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F32
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F34
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F36
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F48
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F50
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F52
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F54
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F77
    ancestors: [("D3",1)]
F128  :  order   ["R","3"]
    by thm  alternating_order
    Disjunctions in history: [("D3",1)]
Hence: order(R) = 3.
by thm  alternating_order  applied to facts  F79
    ancestors: [("D3",2)]
F129  :  order   ["S","181440"]
    by thm  alternating_order
    Disjunctions in history: [("D3",2)]
Hence: order(S) = 181440.
by thm  alternating_order  applied to facts  F81
    ancestors: [("D3",3)]
F130  :  order   ["T","-2741823448618631168"]
    by thm  alternating_order
    Disjunctions in history: [("D3",3)]
Hence: order(T) = -2741823448618631168.
by thm  alternating_order  applied to facts  F83
    ancestors: [("D8",1)]
F131  :  order   ["U","12"]
    by thm  alternating_order
    Disjunctions in history: [("D8",1)]
Hence: order(U) = 12.
by thm  alternating_simple  applied to facts  F32
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F34
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F50
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F52
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F79
    ancestors: [("D3",2)]
F132  :  simple   ["S"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",2)]
Hence: S is simple.
by thm  alternating_simple  applied to facts  F81
    ancestors: [("D3",3)]
F133  :  simple   ["T"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",3)]
Hence: T is simple.
by thm  multiple_sylows  applied to facts  F5
    ancestors: [("D3",1)]
by thm  multiple_sylows  applied to facts  F6
    ancestors: [("D3",2)]
by thm  multiple_sylows  applied to facts  F7
    ancestors: [("D3",3)]
by thm  multiple_sylows  applied to facts  F10
    ancestors: [("D8",1)]
by thm  possible_max_intersections  applied to facts  F37 F11
    ancestors: [("D3",1)]
by thm  possible_max_intersections  applied to facts  F38 F11
    ancestors: [("D3",2)]
by thm  possible_max_intersections  applied to facts  F39 F11
    ancestors: [("D3",3)]
by thm  possible_max_intersections  applied to facts  F40 F14
    ancestors: [("D8",1)]
by thm  intersection_of_sylows  applied to facts  F62
    ancestors: [("D3",1),("D61",0)]
F134  :  sylow_p_subgroup   ["Q1","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F135  :  sylow_p_subgroup   ["R1","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F136  :  intersection   ["Q1","R1","S1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F137  :  order   ["S1","1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
Hence: ?P is a 2-Sylow subgroup of G; ?Q is a 2-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 1.
by thm  intersection_of_sylows  applied to facts  F63
    ancestors: [("D3",1),("D61",1)]
F138  :  sylow_p_subgroup   ["T1","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F139  :  sylow_p_subgroup   ["U1","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F140  :  intersection   ["T1","U1","V1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F141  :  order   ["V1","2"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: ?P is a 2-Sylow subgroup of G; ?Q is a 2-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 2.
by thm  intersection_of_sylows  applied to facts  F65
    ancestors: [("D64",0),("D8",1)]
F142  :  sylow_p_subgroup   ["W1","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F143  :  sylow_p_subgroup   ["X1","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F144  :  intersection   ["W1","X1","Y1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F145  :  order   ["Y1","1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 1.
by thm  intersection_of_sylows  applied to facts  F66
    ancestors: [("D64",1),("D8",1)]
F146  :  sylow_p_subgroup   ["Z1","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F147  :  sylow_p_subgroup   ["A2","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F148  :  intersection   ["Z1","A2","B2"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F149  :  order   ["B2","3"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 3.
by thm  intersection_of_sylows  applied to facts  F67
    ancestors: [("D64",2),("D8",1)]
F150  :  sylow_p_subgroup   ["C2","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F151  :  sylow_p_subgroup   ["D2","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F152  :  intersection   ["C2","D2","E2"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F153  :  order   ["E2","9"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 9.
by thm  normalizer_sylow_intersection  applied to facts  F94 F95 F96 F97 F11 F1
    ancestors: [("D3",1),("D61",1)]
D154 :
Fact {factName = "order", factArgs = ["G2","12"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["G2","36"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["G2","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F155  :  order   ["G2","12"]
    Disjunctions in history: [("D154",0),("D3",1),("D61",1)]
F156  :  order   ["G2","36"]
    Disjunctions in history: [("D154",1),("D3",1),("D61",1)]
F157  :  order   ["G2","108"]
    Disjunctions in history: [("D154",2),("D3",1),("D61",1)]
F158  :  normalizer   ["G","F2","G2"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F159  :  subgroup   ["G2","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F160  :  normalizer_of_sylow_intersection   ["2","G","G2"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(2, G, ?T).
Also consider the following case distinctions: {order(?T) = 12, order(?T) = 36, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (3 alternatives):
    (1) order(?T) = 12    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 36    [case: normalizer_sylow_intersection-cases.2]
    (3) order(?T) = 108    [case: normalizer_sylow_intersection-cases.3]

by thm  normalizer_sylow_intersection  applied to facts  F106 F107 F108 F109 F14 F1
    ancestors: [("D64",2),("D8",1)]
D161 :
Fact {factName = "order", factArgs = ["I2","54"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["I2","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F162  :  order   ["I2","54"]
    Disjunctions in history: [("D161",0),("D64",2),("D8",1)]
F163  :  order   ["I2","108"]
    Disjunctions in history: [("D161",1),("D64",2),("D8",1)]
F164  :  normalizer   ["G","H2","I2"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F165  :  subgroup   ["I2","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F166  :  normalizer_of_sylow_intersection   ["3","G","I2"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(3, G, ?T).
Also consider the following case distinctions: {order(?T) = 54, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (2 alternatives):
    (1) order(?T) = 54    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 108    [case: normalizer_sylow_intersection-cases.2]

by thm  rule_out_max_intersections  applied to facts  F5 F62 F11
    ancestors: [("D3",1),("D61",0)]
by thm  rule_out_max_intersections  applied to facts  F10 F65 F14
    ancestors: [("D64",0),("D8",1)]
by thm  rule_out_max_intersections  applied to facts  F10 F66 F14
    ancestors: [("D64",1),("D8",1)]
by thm  early_contradiction  applied to facts  F31 F1 F56
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F49 F1 F85
    ancestors: [("D3",2)]
by thm  coset_action  applied to facts  F114
    ancestors: [("D3",2)]
by thm  simple_group_action  applied to facts  F115 F59
    ancestors: [("D3",2)]
F167  :  subgroup   ["F","A1680"]
    by thm  simple_group_action
    Disjunctions in history: [("D3",2)]
F168  :  alternating_group   ["A1680","1680"]
    by thm  simple_group_action
    Disjunctions in history: [("D3",2)]
Hence: F ⊆ A1680; A1680 ≅ A_1680 (alternating group).
by thm  enhanced_subgroup_index  applied to facts  F31 F1 F56
    ancestors: [("D3",2)]
by thm  enhanced_subgroup_index  applied to facts  F49 F1 F85
    ancestors: [("D3",2)]
F169  :  index   ["M","G","1680"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D3",2)]
F170  :  transitive_action   ["M","1680"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D3",2)]
Hence: index(M, G, 1680); M acts transitively on 1680 elements.

--- Iteration 5 [140/165 facts in branches] ---
F171  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D154",0),("D3",1),("D61",1)]
Applied theorem: lagrange
    -> [Case D154.1, Case D3.2, Case D61.2] n | m
F172  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D154",1),("D3",1),("D61",1)]
Applied theorem: lagrange
    -> [Case D154.2, Case D3.2, Case D61.2] n | m
F173  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D154",2),("D3",1),("D61",1)]
Applied theorem: lagrange
    -> [Case D154.3, Case D3.2, Case D61.2] n | m
F174  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D161",0),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D161.1, Case D64.3, Case D8.2] n | m
F175  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D161",1),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D161.2, Case D64.3, Case D8.2] n | m
by thm  sylow  applied to facts  F0 F1
F176  :  sylow_p_subgroup   ["J2","2","G"]
    by thm  sylow
F177  :  order   ["J2","4"]
    by thm  sylow
F178  :  sylow_p_subgroup   ["K2","3","G"]
    by thm  sylow
F179  :  order   ["K2","27"]
    by thm  sylow
By Sylow's theorem, 2: n_2 ∈ {1, 27, 3, 9}; 3: n_3 ∈ {1, 4}. We will examine the possible combinations of these counts.
by thm  single_sylow_normal  applied to facts  F12 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F15 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F17 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F19 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F43 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F45 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F72 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F74 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F116 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F118 F9 F1
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F12 F4 F13
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F12 F5 F13
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F12 F6 F13
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F12 F7 F13
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F15 F9 F16
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F15 F10 F16
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F17 F4 F18
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F17 F5 F18
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F17 F6 F18
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F17 F7 F18
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F19 F9 F20
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F19 F10 F20
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F43 F4 F44
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F43 F5 F44
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F43 F6 F44
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F43 F7 F44
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F45 F9 F46
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F45 F10 F46
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F72 F4 F73
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F72 F5 F73
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F72 F6 F73
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F72 F7 F73
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F74 F9 F75
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F74 F10 F75
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F116 F4 F117
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F116 F5 F117
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F116 F6 F117
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F116 F7 F117
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F118 F9 F119
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F118 F10 F119
    ancestors: [("D8",1)]
by thm  embed_An  applied to facts  F5 F2
    ancestors: [("D3",1)]
F180  :  subgroup   ["G","L2"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
F181  :  alternating_group   ["L2","3"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_3 (alternating group).
by thm  embed_An  applied to facts  F6 F2
    ancestors: [("D3",2)]
F182  :  subgroup   ["G","M2"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
F183  :  alternating_group   ["M2","9"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
Hence: G ⊆ ?alt; ?alt ≅ A_9 (alternating group).
by thm  embed_An  applied to facts  F7 F2
    ancestors: [("D3",3)]
F184  :  subgroup   ["G","N2"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
F185  :  alternating_group   ["N2","27"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
Hence: G ⊆ ?alt; ?alt ≅ A_27 (alternating group).
by thm  embed_An  applied to facts  F10 F2
    ancestors: [("D8",1)]
F186  :  subgroup   ["G","O2"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
F187  :  alternating_group   ["O2","4"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_4 (alternating group).
by thm  alternating_order  applied to facts  F30
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F32
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F34
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F36
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F48
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F50
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F52
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F54
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F77
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F79
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F81
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F83
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F121
    ancestors: [("D3",1)]
F188  :  order   ["M1","3"]
    by thm  alternating_order
    Disjunctions in history: [("D3",1)]
Hence: order(M1) = 3.
by thm  alternating_order  applied to facts  F123
    ancestors: [("D3",2)]
F189  :  order   ["N1","181440"]
    by thm  alternating_order
    Disjunctions in history: [("D3",2)]
Hence: order(N1) = 181440.
by thm  alternating_order  applied to facts  F125
    ancestors: [("D3",3)]
F190  :  order   ["O1","-2741823448618631168"]
    by thm  alternating_order
    Disjunctions in history: [("D3",3)]
Hence: order(O1) = -2741823448618631168.
by thm  alternating_order  applied to facts  F127
    ancestors: [("D8",1)]
F191  :  order   ["P1","12"]
    by thm  alternating_order
    Disjunctions in history: [("D8",1)]
Hence: order(P1) = 12.
by thm  alternating_simple  applied to facts  F32
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F34
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F50
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F52
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F79
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F81
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F123
    ancestors: [("D3",2)]
F192  :  simple   ["N1"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",2)]
Hence: N1 is simple.
by thm  alternating_simple  applied to facts  F125
    ancestors: [("D3",3)]
F193  :  simple   ["O1"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",3)]
Hence: O1 is simple.
by thm  alternating_simple  applied to facts  F168
    ancestors: [("D3",2)]
F194  :  simple   ["A1680"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",2)]
Hence: A1680 is simple.
by thm  multiple_sylows  applied to facts  F5
    ancestors: [("D3",1)]
by thm  multiple_sylows  applied to facts  F6
    ancestors: [("D3",2)]
by thm  multiple_sylows  applied to facts  F7
    ancestors: [("D3",3)]
by thm  multiple_sylows  applied to facts  F10
    ancestors: [("D8",1)]
by thm  possible_max_intersections  applied to facts  F37 F11
    ancestors: [("D3",1)]
by thm  possible_max_intersections  applied to facts  F38 F11
    ancestors: [("D3",2)]
by thm  possible_max_intersections  applied to facts  F39 F11
    ancestors: [("D3",3)]
by thm  possible_max_intersections  applied to facts  F40 F14
    ancestors: [("D8",1)]
by thm  intersection_of_sylows  applied to facts  F62
    ancestors: [("D3",1),("D61",0)]
F195  :  sylow_p_subgroup   ["P2","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F196  :  sylow_p_subgroup   ["Q2","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F197  :  intersection   ["P2","Q2","R2"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F198  :  order   ["R2","1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
Hence: ?P is a 2-Sylow subgroup of G; ?Q is a 2-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 1.
by thm  intersection_of_sylows  applied to facts  F63
    ancestors: [("D3",1),("D61",1)]
F199  :  sylow_p_subgroup   ["S2","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F200  :  sylow_p_subgroup   ["T2","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F201  :  intersection   ["S2","T2","U2"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F202  :  order   ["U2","2"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: ?P is a 2-Sylow subgroup of G; ?Q is a 2-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 2.
by thm  intersection_of_sylows  applied to facts  F65
    ancestors: [("D64",0),("D8",1)]
F203  :  sylow_p_subgroup   ["V2","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F204  :  sylow_p_subgroup   ["W2","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F205  :  intersection   ["V2","W2","X2"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F206  :  order   ["X2","1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 1.
by thm  intersection_of_sylows  applied to facts  F66
    ancestors: [("D64",1),("D8",1)]
F207  :  sylow_p_subgroup   ["Y2","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F208  :  sylow_p_subgroup   ["Z2","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F209  :  intersection   ["Y2","Z2","A3"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F210  :  order   ["A3","3"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 3.
by thm  intersection_of_sylows  applied to facts  F67
    ancestors: [("D64",2),("D8",1)]
F211  :  sylow_p_subgroup   ["B3","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F212  :  sylow_p_subgroup   ["C3","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F213  :  intersection   ["B3","C3","D3"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F214  :  order   ["D3","9"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 9.
by thm  normalizer_sylow_intersection  applied to facts  F94 F95 F96 F97 F11 F1
    ancestors: [("D3",1),("D61",1)]
D215 :
Fact {factName = "order", factArgs = ["F3","12"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["F3","36"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["F3","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F216  :  order   ["F3","12"]
    Disjunctions in history: [("D215",0),("D3",1),("D61",1)]
F217  :  order   ["F3","36"]
    Disjunctions in history: [("D215",1),("D3",1),("D61",1)]
F218  :  order   ["F3","108"]
    Disjunctions in history: [("D215",2),("D3",1),("D61",1)]
F219  :  normalizer   ["G","E3","F3"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F220  :  subgroup   ["F3","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F221  :  normalizer_of_sylow_intersection   ["2","G","F3"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(2, G, ?T).
Also consider the following case distinctions: {order(?T) = 12, order(?T) = 36, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (3 alternatives):
    (1) order(?T) = 12    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 36    [case: normalizer_sylow_intersection-cases.2]
    (3) order(?T) = 108    [case: normalizer_sylow_intersection-cases.3]

by thm  normalizer_sylow_intersection  applied to facts  F106 F107 F108 F109 F14 F1
    ancestors: [("D64",2),("D8",1)]
D222 :
Fact {factName = "order", factArgs = ["H3","54"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["H3","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F223  :  order   ["H3","54"]
    Disjunctions in history: [("D222",0),("D64",2),("D8",1)]
F224  :  order   ["H3","108"]
    Disjunctions in history: [("D222",1),("D64",2),("D8",1)]
F225  :  normalizer   ["G","G3","H3"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F226  :  subgroup   ["H3","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F227  :  normalizer_of_sylow_intersection   ["3","G","H3"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(3, G, ?T).
Also consider the following case distinctions: {order(?T) = 54, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (2 alternatives):
    (1) order(?T) = 54    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 108    [case: normalizer_sylow_intersection-cases.2]

by thm  normalizer_sylow_intersection  applied to facts  F138 F139 F140 F141 F11 F1
    ancestors: [("D3",1),("D61",1)]
D228 :
Fact {factName = "order", factArgs = ["J3","12"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["J3","36"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["J3","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F229  :  order   ["J3","12"]
    Disjunctions in history: [("D228",0),("D3",1),("D61",1)]
F230  :  order   ["J3","36"]
    Disjunctions in history: [("D228",1),("D3",1),("D61",1)]
F231  :  order   ["J3","108"]
    Disjunctions in history: [("D228",2),("D3",1),("D61",1)]
F232  :  normalizer   ["G","I3","J3"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F233  :  subgroup   ["J3","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F234  :  normalizer_of_sylow_intersection   ["2","G","J3"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(2, G, ?T).
Also consider the following case distinctions: {order(?T) = 12, order(?T) = 36, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (3 alternatives):
    (1) order(?T) = 12    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 36    [case: normalizer_sylow_intersection-cases.2]
    (3) order(?T) = 108    [case: normalizer_sylow_intersection-cases.3]

by thm  normalizer_sylow_intersection  applied to facts  F150 F151 F152 F153 F14 F1
    ancestors: [("D64",2),("D8",1)]
D235 :
Fact {factName = "order", factArgs = ["L3","54"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["L3","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F236  :  order   ["L3","54"]
    Disjunctions in history: [("D235",0),("D64",2),("D8",1)]
F237  :  order   ["L3","108"]
    Disjunctions in history: [("D235",1),("D64",2),("D8",1)]
F238  :  normalizer   ["G","K3","L3"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F239  :  subgroup   ["L3","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F240  :  normalizer_of_sylow_intersection   ["3","G","L3"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(3, G, ?T).
Also consider the following case distinctions: {order(?T) = 54, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (2 alternatives):
    (1) order(?T) = 54    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 108    [case: normalizer_sylow_intersection-cases.2]

by thm  normalizer_everything_implies_normal  applied to facts  F158 F1 F157
    ancestors: [("D154",2),("D3",1),("D61",1)]
F241  :  normal   ["F2","G"]
    by thm  normalizer_everything_implies_normal
    Disjunctions in history: [("D154",2),("D3",1),("D61",1)]
Hence: F2 ⊴ G (normal subgroup).
by thm  normalizer_everything_implies_normal  applied to facts  F164 F1 F163
    ancestors: [("D161",1),("D64",2),("D8",1)]
F242  :  normal   ["H2","G"]
    by thm  normalizer_everything_implies_normal
    Disjunctions in history: [("D161",1),("D64",2),("D8",1)]
Hence: H2 ⊴ G (normal subgroup).
by thm  rule_out_max_intersections  applied to facts  F5 F62 F11
    ancestors: [("D3",1),("D61",0)]
by thm  rule_out_max_intersections  applied to facts  F10 F65 F14
    ancestors: [("D64",0),("D8",1)]
by thm  rule_out_max_intersections  applied to facts  F10 F66 F14
    ancestors: [("D64",1),("D8",1)]
by thm  rule_out_normalizer_of_intersection_order  applied to facts  F166 F162
    ancestors: [("D161",0),("D64",2),("D8",1)]
F243  :  false   []
    by thm  rule_out_normalizer_of_intersection_order
    Disjunctions in history: [("D161",0),("D64",2),("D8",1)]
DEBUG addNewFacts: recording goal combo from F243 -> [("D161",0),("D64",2),("D8",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D161",0),Just ("order",["I2","54"])),(("D64",2),Just ("max_sylow_intersection",["G","3","9"])),(("D8",1),Just ("num_sylow",["3","G","4"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D161",2)]
DEBUG allPossibleCombos count = 96
  fullCombo: [("D161",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",0),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",1),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",0),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",1),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",0),("D3",0),("D61",1),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",1),("D3",0),("D61",1),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",0),("D3",0),("D61",1),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",1),("D3",0),("D61",1),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",0),("D3",0),("D61",1),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",1),("D3",0),("D61",1),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",0),("D3",0),("D61",0),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F142","sylow_p_subgroup",["W1","3","G"]),("F143","sylow_p_subgroup",["X1","3","G"]),("F144","intersection",["W1","X1","Y1"]),("F145","order",["Y1","1"]),("F203","sylow_p_subgroup",["V2","3","G"]),("F204","sylow_p_subgroup",["W2","3","G"]),("F205","intersection",["V2","W2","X2"]),("F206","order",["X2","1"]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",1),("D3",0),("D61",0),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F142","sylow_p_subgroup",["W1","3","G"]),("F143","sylow_p_subgroup",["X1","3","G"]),("F144","intersection",["W1","X1","Y1"]),("F145","order",["Y1","1"]),("F203","sylow_p_subgroup",["V2","3","G"]),("F204","sylow_p_subgroup",["W2","3","G"]),("F205","intersection",["V2","W2","X2"]),("F206","order",["X2","1"]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",0),("D3",0),("D61",0),("D64",1),("D8",1)]  coveredBy: [[("D64",1),("D8",1)],[("D3",0)]]
    producers for [("D64",1),("D8",1)] -> [("F102","sylow_p_subgroup",["E1","3","G"]),("F103","sylow_p_subgroup",["F1","3","G"]),("F104","intersection",["E1","F1","G1"]),("F105","order",["G1","3"]),("F112","false",[]),("F146","sylow_p_subgroup",["Z1","3","G"]),("F147","sylow_p_subgroup",["A2","3","G"]),("F148","intersection",["Z1","A2","B2"]),("F149","order",["B2","3"]),("F207","sylow_p_subgroup",["Y2","3","G"]),("F208","sylow_p_subgroup",["Z2","3","G"]),("F209","intersection",["Y2","Z2","A3"]),("F210","order",["A3","3"]),("F66","max_sylow_intersection",["G","3","3"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",1),("D3",0),("D61",0),("D64",1),("D8",1)]  coveredBy: [[("D64",1),("D8",1)],[("D3",0)]]
    producers for [("D64",1),("D8",1)] -> [("F102","sylow_p_subgroup",["E1","3","G"]),("F103","sylow_p_subgroup",["F1","3","G"]),("F104","intersection",["E1","F1","G1"]),("F105","order",["G1","3"]),("F112","false",[]),("F146","sylow_p_subgroup",["Z1","3","G"]),("F147","sylow_p_subgroup",["A2","3","G"]),("F148","intersection",["Z1","A2","B2"]),("F149","order",["B2","3"]),("F207","sylow_p_subgroup",["Y2","3","G"]),("F208","sylow_p_subgroup",["Z2","3","G"]),("F209","intersection",["Y2","Z2","A3"]),("F210","order",["A3","3"]),("F66","max_sylow_intersection",["G","3","3"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",0),("D3",0),("D61",0),("D64",2),("D8",1)]  coveredBy: [[("D161",0),("D64",2),("D8",1)],[("D3",0)]]
    producers for [("D161",0),("D64",2),("D8",1)] -> [("F162","order",["I2","54"]),("F174","divides",["n","m"]),("F243","false",[])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",1),("D3",0),("D61",0),("D64",2),("D8",1)]  coveredBy: [[("D3",0)]]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",0),("D3",0),("D61",1),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F142","sylow_p_subgroup",["W1","3","G"]),("F143","sylow_p_subgroup",["X1","3","G"]),("F144","intersection",["W1","X1","Y1"]),("F145","order",["Y1","1"]),("F203","sylow_p_subgroup",["V2","3","G"]),("F204","sylow_p_subgroup",["W2","3","G"]),("F205","intersection",["V2","W2","X2"]),("F206","order",["X2","1"]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D161",1),("D3",0),("D61",1),("D64",0),("D8",1)]  coveredBy: [[("D64",0),("D8",1)],[("D3",0)]]
    producers for [("D64",0),("D8",1)] -> [("F100","intersection",["B1","C1","D1"]),("F101","order",["D1","1"]),("F111","false",[]),("F142","sylow_p_subgroup",["W1","3","G"]),("F143","sylow_p_subgroup",["X1","3","G"]),("F144","intersection",["W1","X1","Y1"]),("F145","order",["Y1","1"]),("F203","sylow_p_subgroup",["V2","3","G"]),("F204","sylow_p_subgroup",["W2","3","G"]),("F205","intersection",["V2","W2","X2"]),("F206","order",["X2","1"]),("F65","max_sylow_intersection",["G","3","1"]),("F98","sylow_p_subgroup",["B1","3","G"]),("F99","sylow_p_subgroup",["C1","3","G"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  early_contradiction  applied to facts  F31 F1 F56
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F49 F1 F85
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F78 F1 F129
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F159 F155 F1
    ancestors: [("D154",0),("D3",1),("D61",1)]
F244  :  false   []
    by thm  early_contradiction
    Disjunctions in history: [("D154",0),("D3",1),("D61",1)]
DEBUG addNewFacts: recording goal combo from F244 -> [("D154",0),("D3",1),("D61",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D154",0),Just ("order",["G2","12"])),(("D3",1),Just ("num_sylow",["2","G","3"])),(("D61",1),Just ("max_sylow_intersection",["G","2","2"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D154",0),("D3",1),("D61",1)],fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D154",3),("D161",2)]
DEBUG allPossibleCombos count = 288
  fullCombo: [("D154",0),("D161",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",0),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",1),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",0),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",1),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D3",0),("D61",1),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D3",0),("D61",1),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  early_contradiction  applied to facts  F159 F156 F1
    ancestors: [("D154",1),("D3",1),("D61",1)]
F245  :  false   []
    by thm  early_contradiction
    Disjunctions in history: [("D154",1),("D3",1),("D61",1)]
DEBUG addNewFacts: recording goal combo from F245 -> [("D154",1),("D3",1),("D61",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D154",1),Just ("order",["G2","36"])),(("D3",1),Just ("num_sylow",["2","G","3"])),(("D61",1),Just ("max_sylow_intersection",["G","2","2"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D154",1),("D3",1),("D61",1)],fromList [("D154",0),("D3",1),("D61",1)],fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D154",3),("D161",2)]
DEBUG allPossibleCombos count = 288
  fullCombo: [("D154",0),("D161",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",0),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",1),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",0),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",1),("D3",0),("D61",0),("D64",2),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D3",0),("D61",1),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D3",0),("D61",1),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  early_contradiction  applied to facts  F165 F162 F1
    ancestors: [("D161",0),("D64",2),("D8",1)]
by thm  coset_action  applied to facts  F114
    ancestors: [("D3",2)]
by thm  coset_action  applied to facts  F169
    ancestors: [("D3",2)]
by thm  simple_group_action  applied to facts  F115 F59
    ancestors: [("D3",2)]
by thm  simple_group_action  applied to facts  F170 F88
    ancestors: [("D3",2)]
F246  :  subgroup   ["M","A1680"]
    by thm  simple_group_action
    Disjunctions in history: [("D3",2)]
Hence: M ⊆ A1680; A1680 ≅ A_1680 (alternating group).
by thm  enhanced_subgroup_index  applied to facts  F31 F1 F56
    ancestors: [("D3",2)]
by thm  enhanced_subgroup_index  applied to facts  F49 F1 F85
    ancestors: [("D3",2)]
by thm  enhanced_subgroup_index  applied to facts  F78 F1 F129
    ancestors: [("D3",2)]
F247  :  index   ["S","G","1680"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D3",2)]
F248  :  transitive_action   ["S","1680"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D3",2)]
Hence: index(S, G, 1680); S acts transitively on 1680 elements.
by thm  enhanced_subgroup_index  applied to facts  F159 F155 F1
    ancestors: [("D154",0),("D3",1),("D61",1)]
F249  :  index   ["G","G2","9"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D154",0),("D3",1),("D61",1)]
F250  :  transitive_action   ["G","9"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D154",0),("D3",1),("D61",1)]
Hence: index(G, G2, 9); G acts transitively on 9 elements.
by thm  enhanced_subgroup_index  applied to facts  F159 F156 F1
    ancestors: [("D154",1),("D3",1),("D61",1)]
F251  :  index   ["G","G2","3"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D154",1),("D3",1),("D61",1)]
F252  :  transitive_action   ["G","3"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D154",1),("D3",1),("D61",1)]
Hence: index(G, G2, 3); G acts transitively on 3 elements.
by thm  enhanced_subgroup_index  applied to facts  F159 F157 F1
    ancestors: [("D154",2),("D3",1),("D61",1)]
F253  :  index   ["G","G2","1"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D154",2),("D3",1),("D61",1)]
F254  :  transitive_action   ["G","1"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D154",2),("D3",1),("D61",1)]
Hence: index(G, G2, 1); G acts transitively on 1 elements.
by thm  enhanced_subgroup_index  applied to facts  F165 F162 F1
    ancestors: [("D161",0),("D64",2),("D8",1)]
F255  :  index   ["G","I2","2"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D161",0),("D64",2),("D8",1)]
F256  :  transitive_action   ["G","2"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D161",0),("D64",2),("D8",1)]
Hence: index(G, I2, 2); G acts transitively on 2 elements.
by thm  enhanced_subgroup_index  applied to facts  F165 F163 F1
    ancestors: [("D161",1),("D64",2),("D8",1)]
F257  :  index   ["G","I2","1"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D161",1),("D64",2),("D8",1)]
F258  :  transitive_action   ["G","1"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D161",1),("D64",2),("D8",1)]
Hence: index(G, I2, 1); G acts transitively on 1 elements.

--- Iteration 6 [220/249 facts in branches] ---
F259  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D215",0),("D3",1),("D61",1)]
Applied theorem: lagrange
    -> [Case D215.1, Case D3.2, Case D61.2] n | m
F260  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D215",1),("D3",1),("D61",1)]
Applied theorem: lagrange
    -> [Case D215.2, Case D3.2, Case D61.2] n | m
F261  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D215",2),("D3",1),("D61",1)]
Applied theorem: lagrange
    -> [Case D215.3, Case D3.2, Case D61.2] n | m
F262  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D222",0),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D222.1, Case D64.3, Case D8.2] n | m
F263  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D222",1),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D222.2, Case D64.3, Case D8.2] n | m
F264  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D228",0),("D3",1),("D61",1)]
Applied theorem: lagrange
    -> [Case D228.1, Case D3.2, Case D61.2] n | m
F265  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D228",1),("D3",1),("D61",1)]
Applied theorem: lagrange
    -> [Case D228.2, Case D3.2, Case D61.2] n | m
F266  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D228",2),("D3",1),("D61",1)]
Applied theorem: lagrange
    -> [Case D228.3, Case D3.2, Case D61.2] n | m
F267  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D235",0),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D235.1, Case D64.3, Case D8.2] n | m
F268  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D235",1),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D235.2, Case D64.3, Case D8.2] n | m
by thm  sylow  applied to facts  F0 F1
F269  :  sylow_p_subgroup   ["M3","2","G"]
    by thm  sylow
F270  :  order   ["M3","4"]
    by thm  sylow
F271  :  sylow_p_subgroup   ["N3","3","G"]
    by thm  sylow
F272  :  order   ["N3","27"]
    by thm  sylow
By Sylow's theorem, 2: n_2 ∈ {1, 27, 3, 9}; 3: n_3 ∈ {1, 4}. We will examine the possible combinations of these counts.
by thm  single_sylow_normal  applied to facts  F12 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F15 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F17 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F19 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F43 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F45 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F72 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F74 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F116 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F118 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F176 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F178 F9 F1
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F12 F4 F13
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F12 F5 F13
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F12 F6 F13
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F12 F7 F13
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F15 F9 F16
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F15 F10 F16
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F17 F4 F18
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F17 F5 F18
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F17 F6 F18
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F17 F7 F18
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F19 F9 F20
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F19 F10 F20
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F43 F4 F44
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F43 F5 F44
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F43 F6 F44
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F43 F7 F44
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F45 F9 F46
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F45 F10 F46
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F72 F4 F73
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F72 F5 F73
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F72 F6 F73
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F72 F7 F73
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F74 F9 F75
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F74 F10 F75
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F116 F4 F117
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F116 F5 F117
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F116 F6 F117
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F116 F7 F117
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F118 F9 F119
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F118 F10 F119
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F176 F4 F177
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F176 F5 F177
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F176 F6 F177
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F176 F7 F177
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F178 F9 F179
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F178 F10 F179
    ancestors: [("D8",1)]
by thm  embed_An  applied to facts  F5 F2
    ancestors: [("D3",1)]
F273  :  subgroup   ["G","O3"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
F274  :  alternating_group   ["O3","3"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_3 (alternating group).
by thm  embed_An  applied to facts  F6 F2
    ancestors: [("D3",2)]
F275  :  subgroup   ["G","P3"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
F276  :  alternating_group   ["P3","9"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
Hence: G ⊆ ?alt; ?alt ≅ A_9 (alternating group).
by thm  embed_An  applied to facts  F7 F2
    ancestors: [("D3",3)]
F277  :  subgroup   ["G","Q3"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
F278  :  alternating_group   ["Q3","27"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
Hence: G ⊆ ?alt; ?alt ≅ A_27 (alternating group).
by thm  embed_An  applied to facts  F10 F2
    ancestors: [("D8",1)]
F279  :  subgroup   ["G","R3"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
F280  :  alternating_group   ["R3","4"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_4 (alternating group).
by thm  alternating_order  applied to facts  F30
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F32
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F34
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F36
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F48
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F50
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F52
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F54
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F77
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F79
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F81
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F83
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F121
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F123
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F125
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F127
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F181
    ancestors: [("D3",1)]
F281  :  order   ["L2","3"]
    by thm  alternating_order
    Disjunctions in history: [("D3",1)]
Hence: order(L2) = 3.
by thm  alternating_order  applied to facts  F183
    ancestors: [("D3",2)]
F282  :  order   ["M2","181440"]
    by thm  alternating_order
    Disjunctions in history: [("D3",2)]
Hence: order(M2) = 181440.
by thm  alternating_order  applied to facts  F185
    ancestors: [("D3",3)]
F283  :  order   ["N2","-2741823448618631168"]
    by thm  alternating_order
    Disjunctions in history: [("D3",3)]
Hence: order(N2) = -2741823448618631168.
by thm  alternating_order  applied to facts  F187
    ancestors: [("D8",1)]
F284  :  order   ["O2","12"]
    by thm  alternating_order
    Disjunctions in history: [("D8",1)]
Hence: order(O2) = 12.
by thm  alternating_simple  applied to facts  F32
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F34
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F50
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F52
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F79
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F81
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F123
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F125
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F168
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F183
    ancestors: [("D3",2)]
F285  :  simple   ["M2"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",2)]
Hence: M2 is simple.
by thm  alternating_simple  applied to facts  F185
    ancestors: [("D3",3)]
F286  :  simple   ["N2"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",3)]
Hence: N2 is simple.
by thm  multiple_sylows  applied to facts  F5
    ancestors: [("D3",1)]
by thm  multiple_sylows  applied to facts  F6
    ancestors: [("D3",2)]
by thm  multiple_sylows  applied to facts  F7
    ancestors: [("D3",3)]
by thm  multiple_sylows  applied to facts  F10
    ancestors: [("D8",1)]
by thm  possible_max_intersections  applied to facts  F37 F11
    ancestors: [("D3",1)]
by thm  possible_max_intersections  applied to facts  F38 F11
    ancestors: [("D3",2)]
by thm  possible_max_intersections  applied to facts  F39 F11
    ancestors: [("D3",3)]
by thm  possible_max_intersections  applied to facts  F40 F14
    ancestors: [("D8",1)]
by thm  intersection_of_sylows  applied to facts  F62
    ancestors: [("D3",1),("D61",0)]
F287  :  sylow_p_subgroup   ["S3","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F288  :  sylow_p_subgroup   ["T3","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F289  :  intersection   ["S3","T3","U3"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F290  :  order   ["U3","1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
Hence: ?P is a 2-Sylow subgroup of G; ?Q is a 2-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 1.
by thm  intersection_of_sylows  applied to facts  F63
    ancestors: [("D3",1),("D61",1)]
F291  :  sylow_p_subgroup   ["V3","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F292  :  sylow_p_subgroup   ["W3","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F293  :  intersection   ["V3","W3","X3"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F294  :  order   ["X3","2"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: ?P is a 2-Sylow subgroup of G; ?Q is a 2-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 2.
by thm  intersection_of_sylows  applied to facts  F65
    ancestors: [("D64",0),("D8",1)]
F295  :  sylow_p_subgroup   ["Y3","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F296  :  sylow_p_subgroup   ["Z3","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F297  :  intersection   ["Y3","Z3","A4"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F298  :  order   ["A4","1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 1.
by thm  intersection_of_sylows  applied to facts  F66
    ancestors: [("D64",1),("D8",1)]
F299  :  sylow_p_subgroup   ["B4","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F300  :  sylow_p_subgroup   ["C4","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F301  :  intersection   ["B4","C4","D4"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F302  :  order   ["D4","3"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 3.
by thm  intersection_of_sylows  applied to facts  F67
    ancestors: [("D64",2),("D8",1)]
F303  :  sylow_p_subgroup   ["E4","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F304  :  sylow_p_subgroup   ["F4","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F305  :  intersection   ["E4","F4","G4"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F306  :  order   ["G4","9"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 9.
by thm  normalizer_sylow_intersection  applied to facts  F94 F95 F96 F97 F11 F1
    ancestors: [("D3",1),("D61",1)]
D307 :
Fact {factName = "order", factArgs = ["I4","12"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["I4","36"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["I4","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F308  :  order   ["I4","12"]
    Disjunctions in history: [("D3",1),("D307",0),("D61",1)]
F309  :  order   ["I4","36"]
    Disjunctions in history: [("D3",1),("D307",1),("D61",1)]
F310  :  order   ["I4","108"]
    Disjunctions in history: [("D3",1),("D307",2),("D61",1)]
F311  :  normalizer   ["G","H4","I4"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F312  :  subgroup   ["I4","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F313  :  normalizer_of_sylow_intersection   ["2","G","I4"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(2, G, ?T).
Also consider the following case distinctions: {order(?T) = 12, order(?T) = 36, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (3 alternatives):
    (1) order(?T) = 12    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 36    [case: normalizer_sylow_intersection-cases.2]
    (3) order(?T) = 108    [case: normalizer_sylow_intersection-cases.3]

by thm  normalizer_sylow_intersection  applied to facts  F106 F107 F108 F109 F14 F1
    ancestors: [("D64",2),("D8",1)]
D314 :
Fact {factName = "order", factArgs = ["K4","54"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["K4","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F315  :  order   ["K4","54"]
    Disjunctions in history: [("D314",0),("D64",2),("D8",1)]
F316  :  order   ["K4","108"]
    Disjunctions in history: [("D314",1),("D64",2),("D8",1)]
F317  :  normalizer   ["G","J4","K4"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F318  :  subgroup   ["K4","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F319  :  normalizer_of_sylow_intersection   ["3","G","K4"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(3, G, ?T).
Also consider the following case distinctions: {order(?T) = 54, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (2 alternatives):
    (1) order(?T) = 54    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 108    [case: normalizer_sylow_intersection-cases.2]

by thm  normalizer_sylow_intersection  applied to facts  F138 F139 F140 F141 F11 F1
    ancestors: [("D3",1),("D61",1)]
D320 :
Fact {factName = "order", factArgs = ["M4","12"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["M4","36"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["M4","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F321  :  order   ["M4","12"]
    Disjunctions in history: [("D3",1),("D320",0),("D61",1)]
F322  :  order   ["M4","36"]
    Disjunctions in history: [("D3",1),("D320",1),("D61",1)]
F323  :  order   ["M4","108"]
    Disjunctions in history: [("D3",1),("D320",2),("D61",1)]
F324  :  normalizer   ["G","L4","M4"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F325  :  subgroup   ["M4","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F326  :  normalizer_of_sylow_intersection   ["2","G","M4"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(2, G, ?T).
Also consider the following case distinctions: {order(?T) = 12, order(?T) = 36, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (3 alternatives):
    (1) order(?T) = 12    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 36    [case: normalizer_sylow_intersection-cases.2]
    (3) order(?T) = 108    [case: normalizer_sylow_intersection-cases.3]

by thm  normalizer_sylow_intersection  applied to facts  F150 F151 F152 F153 F14 F1
    ancestors: [("D64",2),("D8",1)]
D327 :
Fact {factName = "order", factArgs = ["O4","54"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["O4","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F328  :  order   ["O4","54"]
    Disjunctions in history: [("D327",0),("D64",2),("D8",1)]
F329  :  order   ["O4","108"]
    Disjunctions in history: [("D327",1),("D64",2),("D8",1)]
F330  :  normalizer   ["G","N4","O4"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F331  :  subgroup   ["O4","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F332  :  normalizer_of_sylow_intersection   ["3","G","O4"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(3, G, ?T).
Also consider the following case distinctions: {order(?T) = 54, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (2 alternatives):
    (1) order(?T) = 54    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 108    [case: normalizer_sylow_intersection-cases.2]

by thm  normalizer_sylow_intersection  applied to facts  F199 F200 F201 F202 F11 F1
    ancestors: [("D3",1),("D61",1)]
D333 :
Fact {factName = "order", factArgs = ["Q4","12"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["Q4","36"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["Q4","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F334  :  order   ["Q4","12"]
    Disjunctions in history: [("D3",1),("D333",0),("D61",1)]
F335  :  order   ["Q4","36"]
    Disjunctions in history: [("D3",1),("D333",1),("D61",1)]
F336  :  order   ["Q4","108"]
    Disjunctions in history: [("D3",1),("D333",2),("D61",1)]
F337  :  normalizer   ["G","P4","Q4"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F338  :  subgroup   ["Q4","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F339  :  normalizer_of_sylow_intersection   ["2","G","Q4"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(2, G, ?T).
Also consider the following case distinctions: {order(?T) = 12, order(?T) = 36, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (3 alternatives):
    (1) order(?T) = 12    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 36    [case: normalizer_sylow_intersection-cases.2]
    (3) order(?T) = 108    [case: normalizer_sylow_intersection-cases.3]

by thm  normalizer_sylow_intersection  applied to facts  F211 F212 F213 F214 F14 F1
    ancestors: [("D64",2),("D8",1)]
D340 :
Fact {factName = "order", factArgs = ["S4","54"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["S4","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F341  :  order   ["S4","54"]
    Disjunctions in history: [("D340",0),("D64",2),("D8",1)]
F342  :  order   ["S4","108"]
    Disjunctions in history: [("D340",1),("D64",2),("D8",1)]
F343  :  normalizer   ["G","R4","S4"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F344  :  subgroup   ["S4","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F345  :  normalizer_of_sylow_intersection   ["3","G","S4"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(3, G, ?T).
Also consider the following case distinctions: {order(?T) = 54, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (2 alternatives):
    (1) order(?T) = 54    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 108    [case: normalizer_sylow_intersection-cases.2]

by thm  normalizer_everything_implies_normal  applied to facts  F158 F1 F157
    ancestors: [("D154",2),("D3",1),("D61",1)]
by thm  normalizer_everything_implies_normal  applied to facts  F164 F1 F163
    ancestors: [("D161",1),("D64",2),("D8",1)]
by thm  normalizer_everything_implies_normal  applied to facts  F219 F1 F218
    ancestors: [("D215",2),("D3",1),("D61",1)]
F346  :  normal   ["E3","G"]
    by thm  normalizer_everything_implies_normal
    Disjunctions in history: [("D215",2),("D3",1),("D61",1)]
Hence: E3 ⊴ G (normal subgroup).
by thm  normalizer_everything_implies_normal  applied to facts  F225 F1 F224
    ancestors: [("D222",1),("D64",2),("D8",1)]
F347  :  normal   ["G3","G"]
    by thm  normalizer_everything_implies_normal
    Disjunctions in history: [("D222",1),("D64",2),("D8",1)]
Hence: G3 ⊴ G (normal subgroup).
by thm  normalizer_everything_implies_normal  applied to facts  F232 F1 F231
    ancestors: [("D228",2),("D3",1),("D61",1)]
F348  :  normal   ["I3","G"]
    by thm  normalizer_everything_implies_normal
    Disjunctions in history: [("D228",2),("D3",1),("D61",1)]
Hence: I3 ⊴ G (normal subgroup).
by thm  normalizer_everything_implies_normal  applied to facts  F238 F1 F237
    ancestors: [("D235",1),("D64",2),("D8",1)]
F349  :  normal   ["K3","G"]
    by thm  normalizer_everything_implies_normal
    Disjunctions in history: [("D235",1),("D64",2),("D8",1)]
Hence: K3 ⊴ G (normal subgroup).
by thm  rule_out_max_intersections  applied to facts  F5 F62 F11
    ancestors: [("D3",1),("D61",0)]
by thm  rule_out_max_intersections  applied to facts  F10 F65 F14
    ancestors: [("D64",0),("D8",1)]
by thm  rule_out_max_intersections  applied to facts  F10 F66 F14
    ancestors: [("D64",1),("D8",1)]
by thm  rule_out_normalizer_of_intersection_order  applied to facts  F166 F162
    ancestors: [("D161",0),("D64",2),("D8",1)]
by thm  rule_out_normalizer_of_intersection_order  applied to facts  F227 F223
    ancestors: [("D222",0),("D64",2),("D8",1)]
F350  :  false   []
    by thm  rule_out_normalizer_of_intersection_order
    Disjunctions in history: [("D222",0),("D64",2),("D8",1)]
DEBUG addNewFacts: recording goal combo from F350 -> [("D222",0),("D64",2),("D8",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D222",0),Just ("order",["H3","54"])),(("D64",2),Just ("max_sylow_intersection",["G","3","9"])),(("D8",1),Just ("num_sylow",["3","G","4"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D222",0),("D64",2),("D8",1)],fromList [("D154",1),("D3",1),("D61",1)],fromList [("D154",0),("D3",1),("D61",1)],fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D154",3),("D161",2),("D222",2)]
DEBUG allPossibleCombos count = 576
  fullCombo: [("D154",0),("D161",0),("D222",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D222",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D222",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D222",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D222",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D222",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D222",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D222",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",0),("D222",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",0),("D222",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",1),("D222",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",1),("D222",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D222",0),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D222",1),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D222",0),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D222",1),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D222",0),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D222",1),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D222",0),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D222",1),("D3",0),("D61",0),("D64",1),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  rule_out_normalizer_of_intersection_order  applied to facts  F240 F236
    ancestors: [("D235",0),("D64",2),("D8",1)]
F351  :  false   []
    by thm  rule_out_normalizer_of_intersection_order
    Disjunctions in history: [("D235",0),("D64",2),("D8",1)]
DEBUG addNewFacts: recording goal combo from F351 -> [("D235",0),("D64",2),("D8",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D235",0),Just ("order",["L3","54"])),(("D64",2),Just ("max_sylow_intersection",["G","3","9"])),(("D8",1),Just ("num_sylow",["3","G","4"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D235",0),("D64",2),("D8",1)],fromList [("D222",0),("D64",2),("D8",1)],fromList [("D154",1),("D3",1),("D61",1)],fromList [("D154",0),("D3",1),("D61",1)],fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D154",3),("D161",2),("D222",2),("D235",2)]
DEBUG allPossibleCombos count = 1152
  fullCombo: [("D154",0),("D161",0),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",0),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",1),("D161",1),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",0),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",0),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",0),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",2),("D161",0),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  early_contradiction  applied to facts  F31 F1 F56
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F49 F1 F85
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F78 F1 F129
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F122 F1 F189
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F159 F155 F1
    ancestors: [("D154",0),("D3",1),("D61",1)]
by thm  early_contradiction  applied to facts  F159 F156 F1
    ancestors: [("D154",1),("D3",1),("D61",1)]
by thm  early_contradiction  applied to facts  F165 F162 F1
    ancestors: [("D161",0),("D64",2),("D8",1)]
by thm  early_contradiction  applied to facts  F220 F216 F1
    ancestors: [("D215",0),("D3",1),("D61",1)]
F352  :  false   []
    by thm  early_contradiction
    Disjunctions in history: [("D215",0),("D3",1),("D61",1)]
DEBUG addNewFacts: recording goal combo from F352 -> [("D215",0),("D3",1),("D61",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D215",0),Just ("order",["F3","12"])),(("D3",1),Just ("num_sylow",["2","G","3"])),(("D61",1),Just ("max_sylow_intersection",["G","2","2"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D215",0),("D3",1),("D61",1)],fromList [("D235",0),("D64",2),("D8",1)],fromList [("D222",0),("D64",2),("D8",1)],fromList [("D154",1),("D3",1),("D61",1)],fromList [("D154",0),("D3",1),("D61",1)],fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D154",3),("D161",2),("D215",3),("D222",2),("D235",2)]
DEBUG allPossibleCombos count = 3456
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",2),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",2),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",2),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",2),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",0),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",0),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",0),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",0),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",1),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",1),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",1),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",1),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  early_contradiction  applied to facts  F220 F217 F1
    ancestors: [("D215",1),("D3",1),("D61",1)]
F353  :  false   []
    by thm  early_contradiction
    Disjunctions in history: [("D215",1),("D3",1),("D61",1)]
DEBUG addNewFacts: recording goal combo from F353 -> [("D215",1),("D3",1),("D61",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D215",1),Just ("order",["F3","36"])),(("D3",1),Just ("num_sylow",["2","G","3"])),(("D61",1),Just ("max_sylow_intersection",["G","2","2"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D215",1),("D3",1),("D61",1)],fromList [("D215",0),("D3",1),("D61",1)],fromList [("D235",0),("D64",2),("D8",1)],fromList [("D222",0),("D64",2),("D8",1)],fromList [("D154",1),("D3",1),("D61",1)],fromList [("D154",0),("D3",1),("D61",1)],fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D154",3),("D161",2),("D215",3),("D222",2),("D235",2)]
DEBUG allPossibleCombos count = 3456
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",2),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",2),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",2),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",2),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",0),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",0),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",0),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",0),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",1),("D222",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",1),("D222",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",1),("D222",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",1),("D215",1),("D222",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  early_contradiction  applied to facts  F226 F223 F1
    ancestors: [("D222",0),("D64",2),("D8",1)]
by thm  early_contradiction  applied to facts  F233 F229 F1
    ancestors: [("D228",0),("D3",1),("D61",1)]
F354  :  false   []
    by thm  early_contradiction
    Disjunctions in history: [("D228",0),("D3",1),("D61",1)]
DEBUG addNewFacts: recording goal combo from F354 -> [("D228",0),("D3",1),("D61",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D228",0),Just ("order",["J3","12"])),(("D3",1),Just ("num_sylow",["2","G","3"])),(("D61",1),Just ("max_sylow_intersection",["G","2","2"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D228",0),("D3",1),("D61",1)],fromList [("D215",1),("D3",1),("D61",1)],fromList [("D215",0),("D3",1),("D61",1)],fromList [("D235",0),("D64",2),("D8",1)],fromList [("D222",0),("D64",2),("D8",1)],fromList [("D154",1),("D3",1),("D61",1)],fromList [("D154",0),("D3",1),("D61",1)],fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D154",3),("D161",2),("D215",3),("D222",2),("D228",3),("D235",2)]
DEBUG allPossibleCombos count = 10368
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",2),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",2),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",2),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",2),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D228",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D228",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D228",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D228",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D228",2),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D228",2),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",1),("D228",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",1),("D228",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  early_contradiction  applied to facts  F233 F230 F1
    ancestors: [("D228",1),("D3",1),("D61",1)]
F355  :  false   []
    by thm  early_contradiction
    Disjunctions in history: [("D228",1),("D3",1),("D61",1)]
DEBUG addNewFacts: recording goal combo from F355 -> [("D228",1),("D3",1),("D61",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D228",1),Just ("order",["J3","36"])),(("D3",1),Just ("num_sylow",["2","G","3"])),(("D61",1),Just ("max_sylow_intersection",["G","2","2"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D228",1),("D3",1),("D61",1)],fromList [("D228",0),("D3",1),("D61",1)],fromList [("D215",1),("D3",1),("D61",1)],fromList [("D215",0),("D3",1),("D61",1)],fromList [("D235",0),("D64",2),("D8",1)],fromList [("D222",0),("D64",2),("D8",1)],fromList [("D154",1),("D3",1),("D61",1)],fromList [("D154",0),("D3",1),("D61",1)],fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D154",3),("D161",2),("D215",3),("D222",2),("D228",3),("D235",2)]
DEBUG allPossibleCombos count = 10368
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",2),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",2),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",2),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",2),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D228",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D228",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D228",1),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D228",1),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D228",2),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",0),("D228",2),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",1),("D228",0),("D235",0),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",1),("D222",1),("D228",0),("D235",1),("D3",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  early_contradiction  applied to facts  F239 F236 F1
    ancestors: [("D235",0),("D64",2),("D8",1)]
by thm  coset_action  applied to facts  F114
    ancestors: [("D3",2)]
by thm  coset_action  applied to facts  F169
    ancestors: [("D3",2)]
by thm  coset_action  applied to facts  F247
    ancestors: [("D3",2)]
by thm  coset_action  applied to facts  F249
    ancestors: [("D154",0),("D3",1),("D61",1)]
by thm  coset_action  applied to facts  F251
    ancestors: [("D154",1),("D3",1),("D61",1)]
by thm  coset_action  applied to facts  F253
    ancestors: [("D154",2),("D3",1),("D61",1)]
by thm  coset_action  applied to facts  F255
    ancestors: [("D161",0),("D64",2),("D8",1)]
by thm  coset_action  applied to facts  F257
    ancestors: [("D161",1),("D64",2),("D8",1)]
by thm  simple_group_action  applied to facts  F115 F59
    ancestors: [("D3",2)]
by thm  simple_group_action  applied to facts  F170 F88
    ancestors: [("D3",2)]
by thm  simple_group_action  applied to facts  F248 F132
    ancestors: [("D3",2)]
F356  :  subgroup   ["S","A1680"]
    by thm  simple_group_action
    Disjunctions in history: [("D3",2)]
Hence: S ⊆ A1680; A1680 ≅ A_1680 (alternating group).
by thm  simple_group_action  applied to facts  F250 F2
    ancestors: [("D154",0),("D3",1),("D61",1)]
F357  :  subgroup   ["G","A9"]
    by thm  simple_group_action
    Disjunctions in history: [("D154",0),("D3",1),("D61",1)]
F358  :  alternating_group   ["A9","9"]
    by thm  simple_group_action
    Disjunctions in history: [("D154",0),("D3",1),("D61",1)]
Hence: G ⊆ A9; A9 ≅ A_9 (alternating group).
by thm  simple_group_action  applied to facts  F252 F2
    ancestors: [("D154",1),("D3",1),("D61",1)]
F359  :  subgroup   ["G","A3"]
    by thm  simple_group_action
    Disjunctions in history: [("D154",1),("D3",1),("D61",1)]
F360  :  alternating_group   ["A3","3"]
    by thm  simple_group_action
    Disjunctions in history: [("D154",1),("D3",1),("D61",1)]
Hence: G ⊆ A3; A3 ≅ A_3 (alternating group).
by thm  simple_group_action  applied to facts  F254 F2
    ancestors: [("D154",2),("D3",1),("D61",1)]
F361  :  subgroup   ["G","A1"]
    by thm  simple_group_action
    Disjunctions in history: [("D154",2),("D3",1),("D61",1)]
F362  :  alternating_group   ["A1","1"]
    by thm  simple_group_action
    Disjunctions in history: [("D154",2),("D3",1),("D61",1)]
Hence: G ⊆ A1; A1 ≅ A_1 (alternating group).
by thm  simple_group_action  applied to facts  F256 F2
    ancestors: [("D161",0),("D64",2),("D8",1)]
F363  :  subgroup   ["G","A2"]
    by thm  simple_group_action
    Disjunctions in history: [("D161",0),("D64",2),("D8",1)]
F364  :  alternating_group   ["A2","2"]
    by thm  simple_group_action
    Disjunctions in history: [("D161",0),("D64",2),("D8",1)]
Hence: G ⊆ A2; A2 ≅ A_2 (alternating group).
by thm  simple_group_action  applied to facts  F258 F2
    ancestors: [("D161",1),("D64",2),("D8",1)]
F365  :  subgroup   ["G","A1"]
    by thm  simple_group_action
    Disjunctions in history: [("D161",1),("D64",2),("D8",1)]
F366  :  alternating_group   ["A1","1"]
    by thm  simple_group_action
    Disjunctions in history: [("D161",1),("D64",2),("D8",1)]
Hence: G ⊆ A1; A1 ≅ A_1 (alternating group).
by thm  enhanced_subgroup_index  applied to facts  F31 F1 F56
    ancestors: [("D3",2)]
by thm  enhanced_subgroup_index  applied to facts  F49 F1 F85
    ancestors: [("D3",2)]
by thm  enhanced_subgroup_index  applied to facts  F78 F1 F129
    ancestors: [("D3",2)]
by thm  enhanced_subgroup_index  applied to facts  F122 F1 F189
    ancestors: [("D3",2)]
F367  :  index   ["N1","G","1680"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D3",2)]
F368  :  transitive_action   ["N1","1680"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D3",2)]
Hence: index(N1, G, 1680); N1 acts transitively on 1680 elements.
by thm  enhanced_subgroup_index  applied to facts  F159 F155 F1
    ancestors: [("D154",0),("D3",1),("D61",1)]
by thm  enhanced_subgroup_index  applied to facts  F159 F156 F1
    ancestors: [("D154",1),("D3",1),("D61",1)]
by thm  enhanced_subgroup_index  applied to facts  F159 F157 F1
    ancestors: [("D154",2),("D3",1),("D61",1)]
by thm  enhanced_subgroup_index  applied to facts  F165 F162 F1
    ancestors: [("D161",0),("D64",2),("D8",1)]
by thm  enhanced_subgroup_index  applied to facts  F165 F163 F1
    ancestors: [("D161",1),("D64",2),("D8",1)]
by thm  enhanced_subgroup_index  applied to facts  F220 F216 F1
    ancestors: [("D215",0),("D3",1),("D61",1)]
F369  :  index   ["G","F3","9"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D215",0),("D3",1),("D61",1)]
F370  :  transitive_action   ["G","9"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D215",0),("D3",1),("D61",1)]
Hence: index(G, F3, 9); G acts transitively on 9 elements.
by thm  enhanced_subgroup_index  applied to facts  F220 F217 F1
    ancestors: [("D215",1),("D3",1),("D61",1)]
F371  :  index   ["G","F3","3"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D215",1),("D3",1),("D61",1)]
F372  :  transitive_action   ["G","3"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D215",1),("D3",1),("D61",1)]
Hence: index(G, F3, 3); G acts transitively on 3 elements.
by thm  enhanced_subgroup_index  applied to facts  F220 F218 F1
    ancestors: [("D215",2),("D3",1),("D61",1)]
F373  :  index   ["G","F3","1"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D215",2),("D3",1),("D61",1)]
F374  :  transitive_action   ["G","1"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D215",2),("D3",1),("D61",1)]
Hence: index(G, F3, 1); G acts transitively on 1 elements.
by thm  enhanced_subgroup_index  applied to facts  F226 F223 F1
    ancestors: [("D222",0),("D64",2),("D8",1)]
F375  :  index   ["G","H3","2"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D222",0),("D64",2),("D8",1)]
F376  :  transitive_action   ["G","2"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D222",0),("D64",2),("D8",1)]
Hence: index(G, H3, 2); G acts transitively on 2 elements.
by thm  enhanced_subgroup_index  applied to facts  F226 F224 F1
    ancestors: [("D222",1),("D64",2),("D8",1)]
F377  :  index   ["G","H3","1"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D222",1),("D64",2),("D8",1)]
F378  :  transitive_action   ["G","1"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D222",1),("D64",2),("D8",1)]
Hence: index(G, H3, 1); G acts transitively on 1 elements.
by thm  enhanced_subgroup_index  applied to facts  F233 F229 F1
    ancestors: [("D228",0),("D3",1),("D61",1)]
F379  :  index   ["G","J3","9"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D228",0),("D3",1),("D61",1)]
F380  :  transitive_action   ["G","9"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D228",0),("D3",1),("D61",1)]
Hence: index(G, J3, 9); G acts transitively on 9 elements.
by thm  enhanced_subgroup_index  applied to facts  F233 F230 F1
    ancestors: [("D228",1),("D3",1),("D61",1)]
F381  :  index   ["G","J3","3"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D228",1),("D3",1),("D61",1)]
F382  :  transitive_action   ["G","3"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D228",1),("D3",1),("D61",1)]
Hence: index(G, J3, 3); G acts transitively on 3 elements.
by thm  enhanced_subgroup_index  applied to facts  F233 F231 F1
    ancestors: [("D228",2),("D3",1),("D61",1)]
F383  :  index   ["G","J3","1"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D228",2),("D3",1),("D61",1)]
F384  :  transitive_action   ["G","1"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D228",2),("D3",1),("D61",1)]
Hence: index(G, J3, 1); G acts transitively on 1 elements.
by thm  enhanced_subgroup_index  applied to facts  F239 F236 F1
    ancestors: [("D235",0),("D64",2),("D8",1)]
F385  :  index   ["G","L3","2"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D235",0),("D64",2),("D8",1)]
F386  :  transitive_action   ["G","2"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D235",0),("D64",2),("D8",1)]
Hence: index(G, L3, 2); G acts transitively on 2 elements.
by thm  enhanced_subgroup_index  applied to facts  F239 F237 F1
    ancestors: [("D235",1),("D64",2),("D8",1)]
F387  :  index   ["G","L3","1"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D235",1),("D64",2),("D8",1)]
F388  :  transitive_action   ["G","1"]
    by thm  enhanced_subgroup_index
    Disjunctions in history: [("D235",1),("D64",2),("D8",1)]
Hence: index(G, L3, 1); G acts transitively on 1 elements.

--- Iteration 7 [340/373 facts in branches] ---
F389  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D3",1),("D307",0),("D61",1)]
Applied theorem: lagrange
    -> [Case D3.2, Case D307.1, Case D61.2] n | m
F390  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D3",1),("D307",1),("D61",1)]
Applied theorem: lagrange
    -> [Case D3.2, Case D307.2, Case D61.2] n | m
F391  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D3",1),("D307",2),("D61",1)]
Applied theorem: lagrange
    -> [Case D3.2, Case D307.3, Case D61.2] n | m
F392  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D314",0),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D314.1, Case D64.3, Case D8.2] n | m
F393  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D314",1),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D314.2, Case D64.3, Case D8.2] n | m
F394  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D3",1),("D320",0),("D61",1)]
Applied theorem: lagrange
    -> [Case D3.2, Case D320.1, Case D61.2] n | m
F395  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D3",1),("D320",1),("D61",1)]
Applied theorem: lagrange
    -> [Case D3.2, Case D320.2, Case D61.2] n | m
F396  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D3",1),("D320",2),("D61",1)]
Applied theorem: lagrange
    -> [Case D3.2, Case D320.3, Case D61.2] n | m
F397  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D327",0),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D327.1, Case D64.3, Case D8.2] n | m
F398  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D327",1),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D327.2, Case D64.3, Case D8.2] n | m
F399  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D3",1),("D333",0),("D61",1)]
Applied theorem: lagrange
    -> [Case D3.2, Case D333.1, Case D61.2] n | m
F400  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D3",1),("D333",1),("D61",1)]
Applied theorem: lagrange
    -> [Case D3.2, Case D333.2, Case D61.2] n | m
F401  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D3",1),("D333",2),("D61",1)]
Applied theorem: lagrange
    -> [Case D3.2, Case D333.3, Case D61.2] n | m
F402  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D340",0),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D340.1, Case D64.3, Case D8.2] n | m
F403  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D340",1),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D340.2, Case D64.3, Case D8.2] n | m
F404  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D154",1),("D3",1),("D61",1),("D64",1),("D8",1)]
Applied theorem: lagrange
    -> [Case D154.2, Case D3.2, Case D61.2, Case D64.2, Case D8.2] n | m
F405  :  divides   ["n","m"]
    by thm  lagrange
    Disjunctions in history: [("D161",1),("D3",1),("D61",1),("D64",2),("D8",1)]
Applied theorem: lagrange
    -> [Case D161.2, Case D3.2, Case D61.2, Case D64.3, Case D8.2] n | m
by thm  sylow  applied to facts  F0 F1
F406  :  sylow_p_subgroup   ["T4","2","G"]
    by thm  sylow
F407  :  order   ["T4","4"]
    by thm  sylow
F408  :  sylow_p_subgroup   ["U4","3","G"]
    by thm  sylow
F409  :  order   ["U4","27"]
    by thm  sylow
By Sylow's theorem, 2: n_2 ∈ {1, 27, 3, 9}; 3: n_3 ∈ {1, 4}. We will examine the possible combinations of these counts.
by thm  single_sylow_normal  applied to facts  F12 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F15 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F17 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F19 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F43 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F45 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F72 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F74 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F116 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F118 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F176 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F178 F9 F1
    ancestors: [("D8",0)]
by thm  single_sylow_normal  applied to facts  F269 F4 F1
    ancestors: [("D3",0)]
by thm  single_sylow_normal  applied to facts  F271 F9 F1
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F12 F4 F13
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F12 F5 F13
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F12 F6 F13
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F12 F7 F13
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F15 F9 F16
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F15 F10 F16
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F17 F4 F18
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F17 F5 F18
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F17 F6 F18
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F17 F7 F18
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F19 F9 F20
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F19 F10 F20
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F43 F4 F44
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F43 F5 F44
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F43 F6 F44
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F43 F7 F44
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F45 F9 F46
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F45 F10 F46
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F72 F4 F73
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F72 F5 F73
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F72 F6 F73
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F72 F7 F73
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F74 F9 F75
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F74 F10 F75
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F116 F4 F117
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F116 F5 F117
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F116 F6 F117
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F116 F7 F117
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F118 F9 F119
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F118 F10 F119
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F176 F4 F177
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F176 F5 F177
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F176 F6 F177
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F176 F7 F177
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F178 F9 F179
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F178 F10 F179
    ancestors: [("D8",1)]
by thm  count_order_pk_elements  applied to facts  F269 F4 F270
    ancestors: [("D3",0)]
by thm  count_order_pk_elements  applied to facts  F269 F5 F270
    ancestors: [("D3",1)]
by thm  count_order_pk_elements  applied to facts  F269 F6 F270
    ancestors: [("D3",2)]
by thm  count_order_pk_elements  applied to facts  F269 F7 F270
    ancestors: [("D3",3)]
by thm  count_order_pk_elements  applied to facts  F271 F9 F272
    ancestors: [("D8",0)]
by thm  count_order_pk_elements  applied to facts  F271 F10 F272
    ancestors: [("D8",1)]
by thm  embed_An  applied to facts  F5 F2
    ancestors: [("D3",1)]
F410  :  subgroup   ["G","V4"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
F411  :  alternating_group   ["V4","3"]
    by thm  embed_An
    Disjunctions in history: [("D3",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_3 (alternating group).
by thm  embed_An  applied to facts  F6 F2
    ancestors: [("D3",2)]
F412  :  subgroup   ["G","W4"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
F413  :  alternating_group   ["W4","9"]
    by thm  embed_An
    Disjunctions in history: [("D3",2)]
Hence: G ⊆ ?alt; ?alt ≅ A_9 (alternating group).
by thm  embed_An  applied to facts  F7 F2
    ancestors: [("D3",3)]
F414  :  subgroup   ["G","X4"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
F415  :  alternating_group   ["X4","27"]
    by thm  embed_An
    Disjunctions in history: [("D3",3)]
Hence: G ⊆ ?alt; ?alt ≅ A_27 (alternating group).
by thm  embed_An  applied to facts  F10 F2
    ancestors: [("D8",1)]
F416  :  subgroup   ["G","Y4"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
F417  :  alternating_group   ["Y4","4"]
    by thm  embed_An
    Disjunctions in history: [("D8",1)]
Hence: G ⊆ ?alt; ?alt ≅ A_4 (alternating group).
by thm  alternating_order  applied to facts  F30
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F32
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F34
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F36
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F48
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F50
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F52
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F54
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F77
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F79
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F81
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F83
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F121
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F123
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F125
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F127
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F181
    ancestors: [("D3",1)]
by thm  alternating_order  applied to facts  F183
    ancestors: [("D3",2)]
by thm  alternating_order  applied to facts  F185
    ancestors: [("D3",3)]
by thm  alternating_order  applied to facts  F187
    ancestors: [("D8",1)]
by thm  alternating_order  applied to facts  F274
    ancestors: [("D3",1)]
F418  :  order   ["O3","3"]
    by thm  alternating_order
    Disjunctions in history: [("D3",1)]
Hence: order(O3) = 3.
by thm  alternating_order  applied to facts  F276
    ancestors: [("D3",2)]
F419  :  order   ["P3","181440"]
    by thm  alternating_order
    Disjunctions in history: [("D3",2)]
Hence: order(P3) = 181440.
by thm  alternating_order  applied to facts  F278
    ancestors: [("D3",3)]
F420  :  order   ["Q3","-2741823448618631168"]
    by thm  alternating_order
    Disjunctions in history: [("D3",3)]
Hence: order(Q3) = -2741823448618631168.
by thm  alternating_order  applied to facts  F280
    ancestors: [("D8",1)]
F421  :  order   ["R3","12"]
    by thm  alternating_order
    Disjunctions in history: [("D8",1)]
Hence: order(R3) = 12.
by thm  alternating_order  applied to facts  F358
    ancestors: [("D154",0),("D3",1),("D61",1)]
F422  :  order   ["A9","181440"]
    by thm  alternating_order
    Disjunctions in history: [("D154",0),("D3",1),("D61",1)]
Hence: order(A9) = 181440.
by thm  alternating_order  applied to facts  F360
    ancestors: [("D154",1),("D3",1),("D61",1)]
F423  :  order   ["A3","3"]
    by thm  alternating_order
    Disjunctions in history: [("D154",1),("D3",1),("D61",1)]
Hence: order(A3) = 3.
by thm  alternating_order  applied to facts  F362
    ancestors: [("D154",2),("D3",1),("D61",1)]
F424  :  order   ["A1","1"]
    by thm  alternating_order
    Disjunctions in history: [("D154",2),("D3",1),("D61",1)]
Hence: order(A1) = 1.
by thm  alternating_order  applied to facts  F364
    ancestors: [("D161",0),("D64",2),("D8",1)]
F425  :  order   ["A2","1"]
    by thm  alternating_order
    Disjunctions in history: [("D161",0),("D64",2),("D8",1)]
Hence: order(A2) = 1.
by thm  alternating_order  applied to facts  F366
    ancestors: [("D161",1),("D64",2),("D8",1)]
F426  :  order   ["A1","1"]
    by thm  alternating_order
    Disjunctions in history: [("D161",1),("D64",2),("D8",1)]
Hence: order(A1) = 1.
by thm  alternating_simple  applied to facts  F32
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F34
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F50
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F52
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F79
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F81
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F123
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F125
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F168
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F183
    ancestors: [("D3",2)]
by thm  alternating_simple  applied to facts  F185
    ancestors: [("D3",3)]
by thm  alternating_simple  applied to facts  F276
    ancestors: [("D3",2)]
F427  :  simple   ["P3"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",2)]
Hence: P3 is simple.
by thm  alternating_simple  applied to facts  F278
    ancestors: [("D3",3)]
F428  :  simple   ["Q3"]
    by thm  alternating_simple
    Disjunctions in history: [("D3",3)]
Hence: Q3 is simple.
by thm  alternating_simple  applied to facts  F358
    ancestors: [("D154",0),("D3",1),("D61",1)]
F429  :  simple   ["A9"]
    by thm  alternating_simple
    Disjunctions in history: [("D154",0),("D3",1),("D61",1)]
Hence: A9 is simple.
by thm  multiple_sylows  applied to facts  F5
    ancestors: [("D3",1)]
by thm  multiple_sylows  applied to facts  F6
    ancestors: [("D3",2)]
by thm  multiple_sylows  applied to facts  F7
    ancestors: [("D3",3)]
by thm  multiple_sylows  applied to facts  F10
    ancestors: [("D8",1)]
by thm  possible_max_intersections  applied to facts  F37 F11
    ancestors: [("D3",1)]
by thm  possible_max_intersections  applied to facts  F38 F11
    ancestors: [("D3",2)]
by thm  possible_max_intersections  applied to facts  F39 F11
    ancestors: [("D3",3)]
by thm  possible_max_intersections  applied to facts  F40 F14
    ancestors: [("D8",1)]
by thm  intersection_of_sylows  applied to facts  F62
    ancestors: [("D3",1),("D61",0)]
F430  :  sylow_p_subgroup   ["Z4","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F431  :  sylow_p_subgroup   ["A5","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F432  :  intersection   ["Z4","A5","B5"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
F433  :  order   ["B5","1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",0)]
Hence: ?P is a 2-Sylow subgroup of G; ?Q is a 2-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 1.
by thm  intersection_of_sylows  applied to facts  F63
    ancestors: [("D3",1),("D61",1)]
F434  :  sylow_p_subgroup   ["C5","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F435  :  sylow_p_subgroup   ["D5","2","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F436  :  intersection   ["C5","D5","E5"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
F437  :  order   ["E5","2"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: ?P is a 2-Sylow subgroup of G; ?Q is a 2-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 2.
by thm  intersection_of_sylows  applied to facts  F65
    ancestors: [("D64",0),("D8",1)]
F438  :  sylow_p_subgroup   ["F5","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F439  :  sylow_p_subgroup   ["G5","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F440  :  intersection   ["F5","G5","H5"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
F441  :  order   ["H5","1"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",0),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 1.
by thm  intersection_of_sylows  applied to facts  F66
    ancestors: [("D64",1),("D8",1)]
F442  :  sylow_p_subgroup   ["I5","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F443  :  sylow_p_subgroup   ["J5","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F444  :  intersection   ["I5","J5","K5"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
F445  :  order   ["K5","3"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",1),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 3.
by thm  intersection_of_sylows  applied to facts  F67
    ancestors: [("D64",2),("D8",1)]
F446  :  sylow_p_subgroup   ["L5","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F447  :  sylow_p_subgroup   ["M5","3","G"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F448  :  intersection   ["L5","M5","N5"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
F449  :  order   ["N5","9"]
    by thm  intersection_of_sylows
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: ?P is a 3-Sylow subgroup of G; ?Q is a 3-Sylow subgroup of G; intersection(?P, ?Q, ?R); order(?R) = 9.
by thm  normalizer_sylow_intersection  applied to facts  F94 F95 F96 F97 F11 F1
    ancestors: [("D3",1),("D61",1)]
D450 :
Fact {factName = "order", factArgs = ["P5","12"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["P5","36"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["P5","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F451  :  order   ["P5","12"]
    Disjunctions in history: [("D3",1),("D450",0),("D61",1)]
F452  :  order   ["P5","36"]
    Disjunctions in history: [("D3",1),("D450",1),("D61",1)]
F453  :  order   ["P5","108"]
    Disjunctions in history: [("D3",1),("D450",2),("D61",1)]
F454  :  normalizer   ["G","O5","P5"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F455  :  subgroup   ["P5","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F456  :  normalizer_of_sylow_intersection   ["2","G","P5"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(2, G, ?T).
Also consider the following case distinctions: {order(?T) = 12, order(?T) = 36, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (3 alternatives):
    (1) order(?T) = 12    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 36    [case: normalizer_sylow_intersection-cases.2]
    (3) order(?T) = 108    [case: normalizer_sylow_intersection-cases.3]

by thm  normalizer_sylow_intersection  applied to facts  F106 F107 F108 F109 F14 F1
    ancestors: [("D64",2),("D8",1)]
D457 :
Fact {factName = "order", factArgs = ["R5","54"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["R5","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F458  :  order   ["R5","54"]
    Disjunctions in history: [("D457",0),("D64",2),("D8",1)]
F459  :  order   ["R5","108"]
    Disjunctions in history: [("D457",1),("D64",2),("D8",1)]
F460  :  normalizer   ["G","Q5","R5"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F461  :  subgroup   ["R5","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F462  :  normalizer_of_sylow_intersection   ["3","G","R5"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(3, G, ?T).
Also consider the following case distinctions: {order(?T) = 54, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (2 alternatives):
    (1) order(?T) = 54    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 108    [case: normalizer_sylow_intersection-cases.2]

by thm  normalizer_sylow_intersection  applied to facts  F138 F139 F140 F141 F11 F1
    ancestors: [("D3",1),("D61",1)]
D463 :
Fact {factName = "order", factArgs = ["T5","12"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["T5","36"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["T5","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F464  :  order   ["T5","12"]
    Disjunctions in history: [("D3",1),("D463",0),("D61",1)]
F465  :  order   ["T5","36"]
    Disjunctions in history: [("D3",1),("D463",1),("D61",1)]
F466  :  order   ["T5","108"]
    Disjunctions in history: [("D3",1),("D463",2),("D61",1)]
F467  :  normalizer   ["G","S5","T5"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F468  :  subgroup   ["T5","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F469  :  normalizer_of_sylow_intersection   ["2","G","T5"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(2, G, ?T).
Also consider the following case distinctions: {order(?T) = 12, order(?T) = 36, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (3 alternatives):
    (1) order(?T) = 12    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 36    [case: normalizer_sylow_intersection-cases.2]
    (3) order(?T) = 108    [case: normalizer_sylow_intersection-cases.3]

by thm  normalizer_sylow_intersection  applied to facts  F150 F151 F152 F153 F14 F1
    ancestors: [("D64",2),("D8",1)]
D470 :
Fact {factName = "order", factArgs = ["V5","54"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["V5","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F471  :  order   ["V5","54"]
    Disjunctions in history: [("D470",0),("D64",2),("D8",1)]
F472  :  order   ["V5","108"]
    Disjunctions in history: [("D470",1),("D64",2),("D8",1)]
F473  :  normalizer   ["G","U5","V5"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F474  :  subgroup   ["V5","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F475  :  normalizer_of_sylow_intersection   ["3","G","V5"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(3, G, ?T).
Also consider the following case distinctions: {order(?T) = 54, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (2 alternatives):
    (1) order(?T) = 54    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 108    [case: normalizer_sylow_intersection-cases.2]

by thm  normalizer_sylow_intersection  applied to facts  F199 F200 F201 F202 F11 F1
    ancestors: [("D3",1),("D61",1)]
D476 :
Fact {factName = "order", factArgs = ["X5","12"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["X5","36"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["X5","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F477  :  order   ["X5","12"]
    Disjunctions in history: [("D3",1),("D476",0),("D61",1)]
F478  :  order   ["X5","36"]
    Disjunctions in history: [("D3",1),("D476",1),("D61",1)]
F479  :  order   ["X5","108"]
    Disjunctions in history: [("D3",1),("D476",2),("D61",1)]
F480  :  normalizer   ["G","W5","X5"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F481  :  subgroup   ["X5","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F482  :  normalizer_of_sylow_intersection   ["2","G","X5"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(2, G, ?T).
Also consider the following case distinctions: {order(?T) = 12, order(?T) = 36, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (3 alternatives):
    (1) order(?T) = 12    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 36    [case: normalizer_sylow_intersection-cases.2]
    (3) order(?T) = 108    [case: normalizer_sylow_intersection-cases.3]

by thm  normalizer_sylow_intersection  applied to facts  F211 F212 F213 F214 F14 F1
    ancestors: [("D64",2),("D8",1)]
D483 :
Fact {factName = "order", factArgs = ["Z5","54"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["Z5","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F484  :  order   ["Z5","54"]
    Disjunctions in history: [("D483",0),("D64",2),("D8",1)]
F485  :  order   ["Z5","108"]
    Disjunctions in history: [("D483",1),("D64",2),("D8",1)]
F486  :  normalizer   ["G","Y5","Z5"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F487  :  subgroup   ["Z5","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F488  :  normalizer_of_sylow_intersection   ["3","G","Z5"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(3, G, ?T).
Also consider the following case distinctions: {order(?T) = 54, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (2 alternatives):
    (1) order(?T) = 54    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 108    [case: normalizer_sylow_intersection-cases.2]

by thm  normalizer_sylow_intersection  applied to facts  F291 F292 F293 F294 F11 F1
    ancestors: [("D3",1),("D61",1)]
D489 :
Fact {factName = "order", factArgs = ["B6","12"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["B6","36"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["B6","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F490  :  order   ["B6","12"]
    Disjunctions in history: [("D3",1),("D489",0),("D61",1)]
F491  :  order   ["B6","36"]
    Disjunctions in history: [("D3",1),("D489",1),("D61",1)]
F492  :  order   ["B6","108"]
    Disjunctions in history: [("D3",1),("D489",2),("D61",1)]
F493  :  normalizer   ["G","A6","B6"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F494  :  subgroup   ["B6","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
F495  :  normalizer_of_sylow_intersection   ["2","G","B6"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D3",1),("D61",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(2, G, ?T).
Also consider the following case distinctions: {order(?T) = 12, order(?T) = 36, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (3 alternatives):
    (1) order(?T) = 12    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 36    [case: normalizer_sylow_intersection-cases.2]
    (3) order(?T) = 108    [case: normalizer_sylow_intersection-cases.3]

by thm  normalizer_sylow_intersection  applied to facts  F303 F304 F305 F306 F14 F1
    ancestors: [("D64",2),("D8",1)]
D496 :
Fact {factName = "order", factArgs = ["D6","54"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
Fact {factName = "order", factArgs = ["D6","108"], factDependencies = [], factLabel = Nothing, factDisAncestors = fromList [], factDepth = 0, factUseful = False, factConcludingTheorem = Nothing}
    OR
F497  :  order   ["D6","54"]
    Disjunctions in history: [("D496",0),("D64",2),("D8",1)]
F498  :  order   ["D6","108"]
    Disjunctions in history: [("D496",1),("D64",2),("D8",1)]
F499  :  normalizer   ["G","C6","D6"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F500  :  subgroup   ["D6","G"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
F501  :  normalizer_of_sylow_intersection   ["3","G","D6"]
    by thm  normalizer_sylow_intersection
    Disjunctions in history: [("D64",2),("D8",1)]
Hence: normalizer(G, ?R, ?T); ?T ⊆ G; normalizer_of_sylow_intersection(3, G, ?T).
Also consider the following case distinctions: {order(?T) = 54, order(?T) = 108}.
Disjunction normalizer_sylow_intersection-cases (2 alternatives):
    (1) order(?T) = 54    [case: normalizer_sylow_intersection-cases.1]
    (2) order(?T) = 108    [case: normalizer_sylow_intersection-cases.2]

by thm  normalizer_everything_implies_normal  applied to facts  F158 F1 F157
    ancestors: [("D154",2),("D3",1),("D61",1)]
by thm  normalizer_everything_implies_normal  applied to facts  F164 F1 F163
    ancestors: [("D161",1),("D64",2),("D8",1)]
by thm  normalizer_everything_implies_normal  applied to facts  F219 F1 F218
    ancestors: [("D215",2),("D3",1),("D61",1)]
by thm  normalizer_everything_implies_normal  applied to facts  F225 F1 F224
    ancestors: [("D222",1),("D64",2),("D8",1)]
by thm  normalizer_everything_implies_normal  applied to facts  F232 F1 F231
    ancestors: [("D228",2),("D3",1),("D61",1)]
by thm  normalizer_everything_implies_normal  applied to facts  F238 F1 F237
    ancestors: [("D235",1),("D64",2),("D8",1)]
by thm  normalizer_everything_implies_normal  applied to facts  F311 F1 F310
    ancestors: [("D3",1),("D307",2),("D61",1)]
F502  :  normal   ["H4","G"]
    by thm  normalizer_everything_implies_normal
    Disjunctions in history: [("D3",1),("D307",2),("D61",1)]
Hence: H4 ⊴ G (normal subgroup).
by thm  normalizer_everything_implies_normal  applied to facts  F317 F1 F316
    ancestors: [("D314",1),("D64",2),("D8",1)]
F503  :  normal   ["J4","G"]
    by thm  normalizer_everything_implies_normal
    Disjunctions in history: [("D314",1),("D64",2),("D8",1)]
Hence: J4 ⊴ G (normal subgroup).
by thm  normalizer_everything_implies_normal  applied to facts  F324 F1 F323
    ancestors: [("D3",1),("D320",2),("D61",1)]
F504  :  normal   ["L4","G"]
    by thm  normalizer_everything_implies_normal
    Disjunctions in history: [("D3",1),("D320",2),("D61",1)]
Hence: L4 ⊴ G (normal subgroup).
by thm  normalizer_everything_implies_normal  applied to facts  F330 F1 F329
    ancestors: [("D327",1),("D64",2),("D8",1)]
F505  :  normal   ["N4","G"]
    by thm  normalizer_everything_implies_normal
    Disjunctions in history: [("D327",1),("D64",2),("D8",1)]
Hence: N4 ⊴ G (normal subgroup).
by thm  normalizer_everything_implies_normal  applied to facts  F337 F1 F336
    ancestors: [("D3",1),("D333",2),("D61",1)]
F506  :  normal   ["P4","G"]
    by thm  normalizer_everything_implies_normal
    Disjunctions in history: [("D3",1),("D333",2),("D61",1)]
Hence: P4 ⊴ G (normal subgroup).
by thm  normalizer_everything_implies_normal  applied to facts  F343 F1 F342
    ancestors: [("D340",1),("D64",2),("D8",1)]
F507  :  normal   ["R4","G"]
    by thm  normalizer_everything_implies_normal
    Disjunctions in history: [("D340",1),("D64",2),("D8",1)]
Hence: R4 ⊴ G (normal subgroup).
by thm  rule_out_max_intersections  applied to facts  F5 F62 F11
    ancestors: [("D3",1),("D61",0)]
by thm  rule_out_max_intersections  applied to facts  F10 F65 F14
    ancestors: [("D64",0),("D8",1)]
by thm  rule_out_max_intersections  applied to facts  F10 F66 F14
    ancestors: [("D64",1),("D8",1)]
by thm  rule_out_normalizer_of_intersection_order  applied to facts  F166 F162
    ancestors: [("D161",0),("D64",2),("D8",1)]
by thm  rule_out_normalizer_of_intersection_order  applied to facts  F227 F223
    ancestors: [("D222",0),("D64",2),("D8",1)]
by thm  rule_out_normalizer_of_intersection_order  applied to facts  F240 F236
    ancestors: [("D235",0),("D64",2),("D8",1)]
by thm  rule_out_normalizer_of_intersection_order  applied to facts  F319 F315
    ancestors: [("D314",0),("D64",2),("D8",1)]
F508  :  false   []
    by thm  rule_out_normalizer_of_intersection_order
    Disjunctions in history: [("D314",0),("D64",2),("D8",1)]
DEBUG addNewFacts: recording goal combo from F508 -> [("D314",0),("D64",2),("D8",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D314",0),Just ("order",["K4","54"])),(("D64",2),Just ("max_sylow_intersection",["G","3","9"])),(("D8",1),Just ("num_sylow",["3","G","4"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D314",0),("D64",2),("D8",1)],fromList [("D228",1),("D3",1),("D61",1)],fromList [("D228",0),("D3",1),("D61",1)],fromList [("D215",1),("D3",1),("D61",1)],fromList [("D215",0),("D3",1),("D61",1)],fromList [("D235",0),("D64",2),("D8",1)],fromList [("D222",0),("D64",2),("D8",1)],fromList [("D154",1),("D3",1),("D61",1)],fromList [("D154",0),("D3",1),("D61",1)],fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D154",3),("D161",2),("D215",3),("D222",2),("D228",3),("D235",2),("D314",2)]
DEBUG allPossibleCombos count = 20736
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",0),("D3",0),("D314",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",0),("D3",0),("D314",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",1),("D3",0),("D314",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",1),("D3",0),("D314",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",2),("D235",0),("D3",0),("D314",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",2),("D235",0),("D3",0),("D314",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",2),("D235",1),("D3",0),("D314",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",2),("D235",1),("D3",0),("D314",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",0),("D235",0),("D3",0),("D314",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",0),("D235",0),("D3",0),("D314",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",0),("D235",1),("D3",0),("D314",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",0),("D235",1),("D3",0),("D314",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",1),("D235",0),("D3",0),("D314",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",1),("D235",0),("D3",0),("D314",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",1),("D235",1),("D3",0),("D314",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",1),("D228",1),("D235",1),("D3",0),("D314",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  rule_out_normalizer_of_intersection_order  applied to facts  F332 F328
    ancestors: [("D327",0),("D64",2),("D8",1)]
F509  :  false   []
    by thm  rule_out_normalizer_of_intersection_order
    Disjunctions in history: [("D327",0),("D64",2),("D8",1)]
DEBUG addNewFacts: recording goal combo from F509 -> [("D327",0),("D64",2),("D8",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D327",0),Just ("order",["O4","54"])),(("D64",2),Just ("max_sylow_intersection",["G","3","9"])),(("D8",1),Just ("num_sylow",["3","G","4"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D327",0),("D64",2),("D8",1)],fromList [("D314",0),("D64",2),("D8",1)],fromList [("D228",1),("D3",1),("D61",1)],fromList [("D228",0),("D3",1),("D61",1)],fromList [("D215",1),("D3",1),("D61",1)],fromList [("D215",0),("D3",1),("D61",1)],fromList [("D235",0),("D64",2),("D8",1)],fromList [("D222",0),("D64",2),("D8",1)],fromList [("D154",1),("D3",1),("D61",1)],fromList [("D154",0),("D3",1),("D61",1)],fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D154",3),("D161",2),("D215",3),("D222",2),("D228",3),("D235",2),("D314",2),("D327",2)]
DEBUG allPossibleCombos count = 41472
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",0),("D327",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",0),("D327",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",1),("D327",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",1),("D327",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",0),("D327",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",0),("D327",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",1),("D327",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",1),("D327",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",0),("D3",0),("D314",0),("D327",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",0),("D3",0),("D314",0),("D327",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",0),("D3",0),("D314",1),("D327",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",0),("D3",0),("D314",1),("D327",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",1),("D3",0),("D314",0),("D327",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",1),("D3",0),("D314",0),("D327",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",1),("D3",0),("D314",1),("D327",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",1),("D3",0),("D314",1),("D327",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",2),("D235",0),("D3",0),("D314",0),("D327",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",2),("D235",0),("D3",0),("D314",0),("D327",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",2),("D235",0),("D3",0),("D314",1),("D327",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",2),("D235",0),("D3",0),("D314",1),("D327",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  rule_out_normalizer_of_intersection_order  applied to facts  F345 F341
    ancestors: [("D340",0),("D64",2),("D8",1)]
F510  :  false   []
    by thm  rule_out_normalizer_of_intersection_order
    Disjunctions in history: [("D340",0),("D64",2),("D8",1)]
DEBUG addNewFacts: recording goal combo from F510 -> [("D340",0),("D64",2),("D8",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D340",0),Just ("order",["S4","54"])),(("D64",2),Just ("max_sylow_intersection",["G","3","9"])),(("D8",1),Just ("num_sylow",["3","G","4"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D340",0),("D64",2),("D8",1)],fromList [("D327",0),("D64",2),("D8",1)],fromList [("D314",0),("D64",2),("D8",1)],fromList [("D228",1),("D3",1),("D61",1)],fromList [("D228",0),("D3",1),("D61",1)],fromList [("D215",1),("D3",1),("D61",1)],fromList [("D215",0),("D3",1),("D61",1)],fromList [("D235",0),("D64",2),("D8",1)],fromList [("D222",0),("D64",2),("D8",1)],fromList [("D154",1),("D3",1),("D61",1)],fromList [("D154",0),("D3",1),("D61",1)],fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D154",3),("D161",2),("D215",3),("D222",2),("D228",3),("D235",2),("D314",2),("D327",2),("D340",2)]
DEBUG allPossibleCombos count = 82944
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",0),("D327",0),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",0),("D327",0),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",0),("D327",1),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",0),("D327",1),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",1),("D327",0),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",1),("D327",0),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",1),("D327",1),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D314",1),("D327",1),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",0),("D327",0),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",0),("D327",0),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",0),("D327",1),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",0),("D327",1),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",1),("D327",0),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",1),("D327",0),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",1),("D327",1),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",1),("D3",0),("D314",1),("D327",1),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",0),("D3",0),("D314",0),("D327",0),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",0),("D3",0),("D314",0),("D327",0),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",0),("D3",0),("D314",0),("D327",1),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",1),("D235",0),("D3",0),("D314",0),("D327",1),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
DEBUG allCovered = False
Hence: ⊥ (contradiction reached).
by thm  early_contradiction  applied to facts  F31 F1 F56
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F49 F1 F85
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F78 F1 F129
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F122 F1 F189
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F159 F155 F1
    ancestors: [("D154",0),("D3",1),("D61",1)]
by thm  early_contradiction  applied to facts  F159 F156 F1
    ancestors: [("D154",1),("D3",1),("D61",1)]
by thm  early_contradiction  applied to facts  F165 F162 F1
    ancestors: [("D161",0),("D64",2),("D8",1)]
by thm  early_contradiction  applied to facts  F182 F1 F282
    ancestors: [("D3",2)]
by thm  early_contradiction  applied to facts  F220 F216 F1
    ancestors: [("D215",0),("D3",1),("D61",1)]
by thm  early_contradiction  applied to facts  F220 F217 F1
    ancestors: [("D215",1),("D3",1),("D61",1)]
by thm  early_contradiction  applied to facts  F226 F223 F1
    ancestors: [("D222",0),("D64",2),("D8",1)]
by thm  early_contradiction  applied to facts  F233 F229 F1
    ancestors: [("D228",0),("D3",1),("D61",1)]
by thm  early_contradiction  applied to facts  F233 F230 F1
    ancestors: [("D228",1),("D3",1),("D61",1)]
by thm  early_contradiction  applied to facts  F239 F236 F1
    ancestors: [("D235",0),("D64",2),("D8",1)]
by thm  early_contradiction  applied to facts  F312 F308 F1
    ancestors: [("D3",1),("D307",0),("D61",1)]
F511  :  false   []
    by thm  early_contradiction
    Disjunctions in history: [("D3",1),("D307",0),("D61",1)]
DEBUG addNewFacts: recording goal combo from F511 -> [("D3",1),("D307",0),("D61",1)]
DEBUG addNewFacts: signature-mapped ancestors: [(("D3",1),Just ("num_sylow",["2","G","3"])),(("D307",0),Just ("order",["I4","12"])),(("D61",1),Just ("max_sylow_intersection",["G","2","2"]))]
DEBUG updateGoalAchieved: goalCombos = [fromList [("D3",1),("D307",0),("D61",1)],fromList [("D340",0),("D64",2),("D8",1)],fromList [("D327",0),("D64",2),("D8",1)],fromList [("D314",0),("D64",2),("D8",1)],fromList [("D228",1),("D3",1),("D61",1)],fromList [("D228",0),("D3",1),("D61",1)],fromList [("D215",1),("D3",1),("D61",1)],fromList [("D215",0),("D3",1),("D61",1)],fromList [("D235",0),("D64",2),("D8",1)],fromList [("D222",0),("D64",2),("D8",1)],fromList [("D154",1),("D3",1),("D61",1)],fromList [("D154",0),("D3",1),("D61",1)],fromList [("D161",0),("D64",2),("D8",1)],fromList [("D3",2)],fromList [("D64",1),("D8",1)],fromList [("D64",0),("D8",1)],fromList [("D3",1),("D61",0)],fromList [("D8",0)],fromList [("D3",0)]]
DEBUG disjunctionSizes = [("D3",4),("D8",2),("D61",2),("D64",3),("D154",3),("D161",2),("D215",3),("D222",2),("D228",3),("D235",2),("D307",3),("D314",2),("D327",2),("D340",2)]
DEBUG allPossibleCombos count = 248832
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",0),("D314",0),("D327",0),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",0),("D314",0),("D327",0),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",0),("D314",0),("D327",1),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",0),("D314",0),("D327",1),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",0),("D314",1),("D327",0),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",0),("D314",1),("D327",0),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",0),("D314",1),("D327",1),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",0),("D314",1),("D327",1),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",1),("D314",0),("D327",0),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",1),("D314",0),("D327",0),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",1),("D314",0),("D327",1),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",1),("D314",0),("D327",1),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",1),("D314",1),("D327",0),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",1),("D314",1),("D327",0),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",1),("D314",1),("D327",1),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",1),("D314",1),("D327",1),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",2),("D314",0),("D327",0),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",2),("D314",0),("D327",0),("D340",1),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F27","order_pk_lower_bound",["G","3","26"]),("F42","false",[]),("F9","num_sylow",["3","G","1"])]
    producers for [("D3",0)] -> [("F21","not_simple",["G"]),("F23","order_pk_lower_bound",["G","2","3"]),("F4","num_sylow",["2","G","1"]),("F41","false",[])]
  fullCombo: [("D154",0),("D161",0),("D215",0),("D222",0),("D228",0),("D235",0),("D3",0),("D307",2),("D314",0),("D327",1),("D340",0),("D61",0),("D64",0),("D8",0)]  coveredBy: [[("D8",0)],[("D3",0)]]
    producers for [("D8",0)] -> [("F22","not_simple",["G"]),("F